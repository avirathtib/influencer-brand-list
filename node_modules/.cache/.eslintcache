[{"/Users/surabhishetty/Desktop/influencer-brand-list/src/index.js":"1","/Users/surabhishetty/Desktop/influencer-brand-list/src/App.js":"2","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/InfluencerProfiles.js":"3","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/Signup.js":"4","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/Login.js":"5","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedOutHomePage.js":"6","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateInfluencerProfile.js":"7","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedInHomePage.js":"8","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateBrandsProfile.js":"9","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/InfluencerIndividualProfiles.js":"10","/Users/surabhishetty/Desktop/influencer-brand-list/src/firebase-config.js":"11","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/BrandProfiles.js":"12"},{"size":197,"mtime":1643145210268,"results":"13","hashOfConfig":"14"},{"size":2470,"mtime":1644123004686,"results":"15","hashOfConfig":"14"},{"size":4920,"mtime":1644350724015,"results":"16","hashOfConfig":"14"},{"size":2766,"mtime":1643145210269,"results":"17","hashOfConfig":"14"},{"size":1768,"mtime":1643405811556,"results":"18","hashOfConfig":"14"},{"size":474,"mtime":1643145210269,"results":"19","hashOfConfig":"14"},{"size":8186,"mtime":1643921473840,"results":"20","hashOfConfig":"14"},{"size":2671,"mtime":1644123053497,"results":"21","hashOfConfig":"14"},{"size":3935,"mtime":1643854137648,"results":"22","hashOfConfig":"14"},{"size":778,"mtime":1643829454939,"results":"23","hashOfConfig":"14"},{"size":779,"mtime":1643920352575,"results":"24","hashOfConfig":"14"},{"size":2095,"mtime":1643580511388,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1mvhkdg",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"28"},"/Users/surabhishetty/Desktop/influencer-brand-list/src/index.js",[],["62","63"],"/Users/surabhishetty/Desktop/influencer-brand-list/src/App.js",["64","65"],"import { useState, createContext, useContext } from \"react\";\nimport Login from \"./pages/Login\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Signup from \"./pages/Signup\";\nimport SignedInHomePage from \"./pages/SignedInHomePage\";\nimport SignedOutHomePage from \"./pages/SignedOutHomePage\";\nimport CreateInfluencerProfile from \"./pages/CreateInfluencerProfile\";\nimport InfluencerProfiles from \"./pages/InfluencerProfiles\";\nimport CreateBrandsProfile from \"./pages/CreateBrandsProfile\";\nimport InfluencerIndividualProfiles from \"./pages/InfluencerIndividualProfiles\";\n\nexport const UserContext = createContext();\nexport const ProfileContext = createContext();\nexport const ClickedProfileContext = createContext();\nexport const SelectedTagsContext = createContext();\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [profileType, setProfileType] = useState(\"\");\n  const [clickedProfile, setClickedProfile] = useState(\"\");\n  const [selectedTagList, setSelectedTagList] = useState([]);\n  return (\n    <ClickedProfileContext.Provider\n      value={{ clickedProfile, setClickedProfile }}\n    >\n      <SelectedTagsContext.Provider\n        value={{ selectedTagList, setSelectedTagList }}\n      >\n        <UserContext.Provider value={{ email, setEmail }}>\n          <ProfileContext.Provider value={{ profileType, setProfileType }}>\n            <Router>\n              <Routes>\n                <Route path=\"\" element={<SignedOutHomePage />} />\n                <Route path=\"login\" element={<Login />} />\n                <Route path=\"signup\" element={<Signup />} />\n                <Route path=\"homepage\" element={<SignedInHomePage />} />\n                <Route\n                  path=\"influencerProfiles\"\n                  element={<InfluencerProfiles />}\n                />\n                <Route\n                  path=\"createInfluencerPortfolio\"\n                  element={<CreateInfluencerProfile />}\n                />\n                <Route\n                  path=\"profiles/:id\"\n                  element={<InfluencerIndividualProfiles />}\n                />\n                <Route\n                  path=\"createBrandsPortfolio\"\n                  element={<CreateBrandsProfile />}\n                />\n              </Routes>\n            </Router>\n          </ProfileContext.Provider>\n        </UserContext.Provider>\n      </SelectedTagsContext.Provider>\n    </ClickedProfileContext.Provider>\n  );\n}\n\nexport default App;\n",["66","67"],"/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/InfluencerProfiles.js",["68","69","70","71","72","73","74","75","76","77","78","79"],"import React, { useEffect, useState, createRef, useContext } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport Card from \"react-bootstrap/Card\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport \"../styles/cardStyle.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  ProfileContext,\n  SelectedTagsContext,\n  ClickedProfileContext,\n} from \"../App\";\n\nconst numbers = new Array(20).fill(1).map((_, index) => index + 1);\n\nconst clickHandler = () => {\n  alert(\"clicked!\");\n};\n\nfunction InfluencerProfiles() {\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState([]);\n  const { selectedTagList, setSelectedTagList } =\n    useContext(SelectedTagsContext);\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n  useEffect(() => {\n    loop();\n  }, [selectedTagList]);\n\n  const scrollRef = createRef();\n  //#endregion\n  let temp = [];\n  async function loop() {\n    if (selectedTagList.length == 0) {\n      const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n      console.log(querySnapshot);\n      querySnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        temp.push(doc.data());\n      });\n      setProfiles(temp);\n    } else {\n      console.log(\"hello from lse\");\n      const profilesSet = new Set();\n      selectedTagList.map((tag) => {\n        const querySnapshot = getDoc(doc(db, \"influencerTags\", tag));\n        console.log(querySnapshot);\n        console.log(\"boss\");\n      });\n    }\n  }\n\n  const enableKeyboardCursorToScroll = () => {\n    if (scrollRef.current) {\n      scrollRef.current.focus();\n    }\n  };\n\n  function handleClick(profile) {\n    setClickedProfile(profile);\n    console.log(\"Hello\");\n    navigate(`/profiles/${profile.email}`);\n  }\n\n  // const tagItems = await getDocs(collection(db, \"influencerTags\"));\n  // tagItems.forEach((doc) => {\n  //   <div>\n  //     <div>\n  //       <img\n  //         src=\"gold.jpg\"\n  //         width=\"300px\"\n  //         alt=\"indiana jones contemplates swiping the statue\"\n  //       />\n  //       <h1>{doc.data().name}</h1>\n  //       <ScrollContainer className=\"container\">\n  //         <section\n  //           className=\"tiles\"\n  //           onFocus={enableKeyboardCursorToScroll}\n  //           ref={scrollRef}\n  //         >\n  //           {doc.data().influencers.map((email) => (\n  //             <Col>\n  //               <div>\n  //                 <Row>\n  //                   {/* <div onClick={() => handleClick(profile)}> */}\n  //                   <div>\n  //                     <Card style={{ width: \"18rem\", cursor: \"pointer\" }}>\n  //                       <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n  //                       <Card.Body>\n  //                         <Card.Title>fill title</Card.Title>\n  //                         <Card.Text>{email}</Card.Text>\n  //                         <button>View Profile</button>\n  //                       </Card.Body>\n  //                     </Card>\n  //                   </div>\n  //                 </Row>\n  //               </div>\n  //             </Col>\n  //           ))}\n  //         </section>\n  //       </ScrollContainer>\n  //     </div>\n  //   </div>;\n  //   // console.log(doc.id, \" => \", doc.data());\n  // });\n\n  // stocklist.map((stockname) => (\n  //   <li>\n  //     {stockname.title} : {stockname.ticker}\n  //   </li>\n  // ));\n\n  return (\n    <div>\n      <div>\n        <img\n          src=\"gold.jpg\"\n          width=\"300px\"\n          alt=\"indiana jones contemplates swiping the statue\"\n        />\n        <h1>Drag with Scrollbars using React Indiana Drag Scroll</h1>\n        <ScrollContainer className=\"container\">\n          <section\n            className=\"tiles\"\n            onFocus={enableKeyboardCursorToScroll}\n            ref={scrollRef}\n          >\n            {profiles.map((profile) => (\n              <Col>\n                <div>\n                  <Row>\n                    <div onClick={() => handleClick(profile)}>\n                      <Card style={{ width: \"18rem\", cursor: \"pointer\" }}>\n                        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                        <Card.Body>\n                          <Card.Title>{profile.name}</Card.Title>\n                          <Card.Text>{profile.description}</Card.Text>\n                          <button>View Profile</button>\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </Row>\n                </div>\n              </Col>\n            ))}\n          </section>\n        </ScrollContainer>\n      </div>\n      <div>\n        <p> profiles by tag</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InfluencerProfiles;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/Signup.js",["80","81","82","83","84"],"import React from \"react\";\nimport { useState, useContext } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase-config\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../App\";\n\nfunction Signup() {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerFullName, setRegisterFullName] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const { profileType, setProfileType } = useContext(ProfileContext);\n\n  const register = async () => {\n    try {\n      const user = await createUserWithEmailAndPassword(\n        auth,\n        registerEmail,\n        registerPassword\n      );\n      console.log(user);\n      await setDoc(doc(db, profileType, registerEmail), {\n        email: registerEmail,\n        name: registerFullName,\n        profileType: profileType,\n        extendedProfileCreated: false,\n      });\n\n      navigate(\"/login\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3> Register User </h3>\n        <input\n          placeholder=\"Full Name\"\n          onChange={(event) => {\n            setRegisterFullName(event.target.value);\n          }}\n        ></input>\n        <input\n          placeholder=\"Email...\"\n          onChange={(event) => {\n            setRegisterEmail(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Password...\"\n          onChange={(event) => {\n            setRegisterPassword(event.target.value);\n          }}\n        />\n        <div>\n          <div className=\"radio-btn-container\">\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setProfileType(\"Influencer\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={profileType}\n                name=\"profileType\"\n                checked={profileType == \"Influencer\"}\n              />\n              Influencer\n            </div>\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setProfileType(\"Brand\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={profileType}\n                name=\"profileType\"\n                checked={profileType == \"Brand\"}\n              />\n              Brand\n            </div>\n          </div>\n        </div>\n\n        <button onClick={register}> Create User</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/Login.js",["85","86","87","88","89","90"],"import { useState, useContext } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { auth } from \"../firebase-config\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config\";\n\nfunction Login() {\n  const { email, setEmail } = useContext(UserContext);\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  const login = async () => {\n    try {\n      const user = await signInWithEmailAndPassword(auth, email, loginPassword);\n     \n      console.log(\"logged in\");\n      const docRef = doc(db, \"Brand\", email);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setProfileType(\"Brand\");\n        \n      } else {\n        // doc.data() will be undefined in this case\n        setProfileType(\"Influencer\");\n      }\n      console.log(profileType)\n\n      navigate(\"/homepage\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h3> Login </h3>\n        <input\n          placeholder=\"Email...\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Password...\"\n          onChange={(event) => {\n            setLoginPassword(event.target.value);\n          }}\n        />\n        <div>\n          <button onClick={login}> Login</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedOutHomePage.js",["91"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SignedOutHomePage() {\n  const navigate = useNavigate();\n  //#endregion\n  const tologin = () => {\n    navigate(\"/login\");\n  };\n  const tosignup = () => {\n    navigate(\"/signup\");\n  };\n\n  return (\n    <div>\n      <button onClick={tologin}>Login</button>\n      <button onClick={tosignup}>Sign up</button>\n    </div>\n  );\n}\n\nexport default SignedOutHomePage;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateInfluencerProfile.js",["92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { db } from \"../firebase-config\";\nimport app from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext, ClickedProfileContext } from \"../App\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\n\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nfunction CreateInfluencerProfile() {\n  const { email, setEmail } = useContext(UserContext);\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [instagram, setInstagram] = useState(\"defaultinsta\");\n  const [twitter, setTwitter] = useState(\"defaultTwitter\");\n  const [facebook, setFacebook] = useState(\"defaultFacebook\");\n  const [portfolio, setPortfolio] = useState(\"defaultportfolio\");\n  const [salary, setSalary] = useState(\"defaultsalary\");\n  const [tags, setTags] = useState([]);\n  const storage = getStorage();\n\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n\n  const onFileChange = async (e) => {\n    const file = e.target.files[0];\n    // const storageRef = app.storage().ref();\n    // const fileRef = storageRef.child(file.name);\n    // await fileRef.put(file);\n    // setFileUrl(await fileRef.getDownloadURL());\n    const storage = getStorage();\n    const storageRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n        }\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n      },\n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log(\"File available at\", downloadURL);\n          setFileUrl(downloadURL);\n        });\n      }\n    );\n  };\n\n  const submitHandler = async (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n\n    console.log(profileType);\n    console.log(email);\n    const addDetails = doc(db, profileType, email);\n    console.log(addDetails);\n    setDoc(\n      addDetails,\n      {\n        description: description,\n        location: location,\n        instagram: instagram,\n        facebook: facebook,\n        portfolio: portfolio,\n        salary: salary,\n        extendedProfileCreated: true,\n        tags: tags,\n        avatar: fileUrl,\n      },\n      { merge: true }\n    );\n\n    tags.map((tag) => addToTags(tag));\n    //navigate(`/profiles/${profile.email}`)\n  };\n\n  const addToTags = async (tag) => {\n    // const addTags = doc(db, tags, tag);\n\n    const docRef = doc(db, \"influencerTags\", tag);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      let oldinfluencers = docSnap.data().influencers;\n      oldinfluencers.push(email);\n      let oldsize = docSnap.data().size;\n\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: oldsize + 1,\n        influencers: oldinfluencers,\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 1,\n        influencers: [email],\n      });\n    }\n  };\n\n  const nameHandler = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = (e) => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const descriptionHandler = (e) => {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n    console.log(description);\n  };\n\n  const locationHandler = (e) => {\n    console.log(e.target.value);\n    setLocation(e.target.value);\n    console.log(location);\n  };\n\n  const instagramHandler = (e) => {\n    console.log(e.target.value);\n    setInstagram(e.target.value);\n    console.log(instagram);\n  };\n\n  const twitterHandler = (e) => {\n    console.log(e.target.value);\n    setTwitter(e.target.value);\n    console.log(twitter);\n  };\n\n  const facebookHandler = (e) => {\n    console.log(e.target.value);\n    setFacebook(e.target.value);\n    console.log(facebook);\n  };\n\n  const portfolioHandler = (e) => {\n    console.log(e.target.value);\n    setPortfolio(e.target.value);\n    console.log(portfolio);\n  };\n\n  const salaryHandler = (e) => {\n    console.log(e.target.value);\n    setSalary(e.target.value);\n    console.log(salary);\n  };\n\n  // const submitHandler = (e) => {\n  //   console.log(profileType)\n  //   e.preventDefault();\n  //   try {\n  //     console.log(profileType)\n  //     console.log(email)\n  //     const addDetails = doc(db, profileType, email);\n  //     console.log(addDetails);\n  //     setDoc(\n  //       addDetails,\n  //       {\n  //         description: description,\n  //         location: location,\n  //         instagram: instagram,\n  //         facebook: facebook,\n  //         portfolio: portfolio,\n  //         salary: salary,\n  //         extendedProfileCreated: true,\n  //         tags: tags,\n  //       },\n  //       { merge: true }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          required=\"required\"\n          name=\"full_name\"\n          onChange={nameHandler}\n          placeholder=\"Full Name\"\n          value={name}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          required=\"required\"\n          onChange={emailHandler}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"description\"\n          required=\"required\"\n          onChange={descriptionHandler}\n          placeholder=\"Description\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          required=\"required\"\n          onChange={locationHandler}\n          placeholder=\"Location\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"instagram\"\n          required=\"required\"\n          onChange={instagramHandler}\n          placeholder=\"Instagram\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"twitter\"\n          required=\"required\"\n          onChange={twitterHandler}\n          placeholder=\"Twitter\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"Facebook\"\n          required=\"required\"\n          onChange={facebookHandler}\n          placeholder=\"Facebook\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"portfolio\"\n          required=\"required\"\n          onChange={portfolioHandler}\n          placeholder=\"Portfolio\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"salary\"\n          required=\"required\"\n          onChange={salaryHandler}\n          placeholder=\"Salary\"\n        />\n        <br />\n        <p>Tags</p>\n        <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n        <input type=\"file\" onChange={onFileChange} />\n        <button onSubmit={submitHandler}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateInfluencerProfile;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedInHomePage.js",["104","105","106","107","108","109","110","111","112","113","114","115"],"import { React, useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport {\n  doc,\n  collection,\n  setDoc,\n  updateDoc,\n  getDocs,\n} from \"firebase/firestore\";\nimport { ProfileContext, SelectedTagsContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport InfluencerProfiles from \"./InfluencerProfiles\";\nimport BrandProfiles from \"./BrandProfiles\";\n//import CreateBrandsProfile from \"./pages/CreateBrandsProfile\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction SignedInHomePage() {\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const { selectedTagList, setSelectedTagList } =\n    useContext(SelectedTagsContext);\n  const [tagList, setTagList] = useState([]);\n  const [showAllProfiles, setShowAllProfiles] = useState(true);\n\n  useEffect(async () => {\n    try {\n      let temp = [];\n      const querySnapshot = await getDocs(collection(db, \"influencerTags\"));\n      querySnapshot.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n        temp.push(doc.data().name);\n      });\n      setTagList(temp);\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n\n  const navigate = useNavigate();\n\n  const createinf = () => {\n    navigate(\"/createInfluencerPortfolio\");\n  };\n  const createbrand = () => {\n    navigate(\"/createBrandsPortfolio\");\n  };\n  const handleClick = (tagName) => {\n    selectedTagList.push(tagName);\n    setSelectedTagList(selectedTagList);\n    console.log(selectedTagList);\n  };\n\n  const handleDelete = (tagName) => {\n    const index = selectedTagList.indexOf(tagName);\n    if (index > -1) {\n      selectedTagList.splice(index, 1); // 2nd parameter means remove one item only\n      setSelectedTagList(selectedTagList);\n    }\n  };\n\n  const tagItems = tagList.map((tagName) => (\n    <Chip\n      label={tagName}\n      onClick={() => handleClick(tagName)}\n      onDelete={() => handleDelete(tagName)}\n    />\n  ));\n\n  return (\n    <div>\n      <div>\n        {profileType == \"Brand\" ? (\n          <button onClick={createinf}>Create Influencer Profile</button>\n        ) : (\n          <button onClick={createbrand}>Create Brand Profile</button>\n        )}\n      </div>\n\n      <div>\n        <p>tags display</p>\n        <Stack direction=\"row\" spacing={1}>\n          {tagItems}\n        </Stack>\n      </div>\n\n      {showAllProfiles ? (\n        <div>\n          {profileType == \"Brand\" ? <BrandProfiles /> : <InfluencerProfiles />}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default SignedInHomePage;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateBrandsProfile.js",["116","117","118","119","120","121"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nfunction CreateBrandsProfile() {\n  const { email, setEmail } = useContext(UserContext);\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [link, setLink] = useState(\"defaultlink\");\n  const [remote, setRemote] = useState(\"false\");\n  const [tags, setTags] = useState([]);\n\n  //need to do tags, image\n\n  const nameHandler = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = (e) => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const descriptionHandler = (e) => {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n    console.log(description);\n  };\n\n  const locationHandler = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const linkHandler = (e) => {\n    setLink(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    try {\n      const addDetails = doc(db, profileType, email);\n      console.log(addDetails);\n      setDoc(\n        addDetails,\n        {\n          description: description,\n          location: location,\n          socialmedialink: link,\n          extendedProfileCreated: true,\n          remote: remote,\n          tags: tags,\n        },\n        { merge: true }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n\n     \n  }\n \n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          required=\"required\"\n          name=\"full_name\"\n          onChange={nameHandler}\n          placeholder=\"Full Name\"\n          value={name}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          required=\"required\"\n          onChange={emailHandler}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"description\"\n          required=\"required\"\n          onChange={descriptionHandler}\n          placeholder=\"Description\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          required=\"required\"\n          onChange={locationHandler}\n          placeholder=\"Location\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"Link to social media\"\n          required=\"required\"\n          onChange={linkHandler}\n          placeholder=\"Instagram\"\n        />\n\n        <br />\n\n        <div>\n          <div className=\"radio-btn-container\">\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setRemote(\"true\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={remote}\n                name=\"remote\"\n                checked={remote == \"true\"}\n              />\n              Remote\n            </div>\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setRemote(\"false\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={remote}\n                name=\"remote\"\n                checked={remote == \"false\"}\n              />\n              Not Remote\n            </div>\n          </div>\n        </div>\n\n        <p>Tags</p>\n        <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n        <input type=\"submit\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreateBrandsProfile;\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/InfluencerIndividualProfiles.js",["122","123"],"import { React, useContext } from \"react\";\nimport { ClickedProfileContext } from \"../App\";\n\nfunction InfluencerIndividualProfiles() {\n    const { clickedProfile, setClickedProfile } = useContext(ClickedProfileContext);\n\n    return (\n        <div>\n            <p>{clickedProfile.name}</p>\n            <p>{clickedProfile.description}</p>\n            <p>{clickedProfile.location}</p>\n            <p>{clickedProfile.instagram}</p>\n            <p>{clickedProfile.twitter}</p>\n            <p>{clickedProfile.facebook}</p>\n            <p>{clickedProfile.portfolio}</p>\n            <p>{clickedProfile.salary}</p>\n            <p>{clickedProfile.tags}</p>\n            <img src={clickedProfile.avatar}></img>\n           \n        </div>\n    )\n}\n\nexport default InfluencerIndividualProfiles\n","/Users/surabhishetty/Desktop/influencer-brand-list/src/firebase-config.js",[],"/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/BrandProfiles.js",["124","125","126","127","128","129","130","131"],"import React, { useEffect, useState, createRef } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport Card from \"react-bootstrap/Card\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport \"../styles/cardStyle.css\";\n\nconst numbers = new Array(20).fill(1).map((_, index) => index + 1);\n\nconst clickHandler = () => {\n  alert(\"clicked!\");\n};\n\nfunction BrandProfiles() {\n  const [profiles, setProfiles] = useState([]);\n  useEffect(() => {\n    loop();\n  }, []);\n\n  const scrollRef = createRef();\n  //#endregion\n  let temp = [];\n  async function loop() {\n    const querySnapshot = await getDocs(collection(db, \"Brand\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      temp.push(doc.data());\n    });\n    setProfiles(temp);\n  }\n\n  const enableKeyboardCursorToScroll = () => {\n    if (scrollRef.current) {\n      scrollRef.current.focus();\n    }\n  };\n\n  return (\n    <div>\n      <img\n        src=\"gold.jpg\"\n        width=\"300px\"\n        alt=\"indiana jones contemplates swiping the statue\"\n      />\n      <h1>Drag with Scrollbars using React Indiana Drag Scroll</h1>\n      <ScrollContainer className=\"container\">\n        <section\n          className=\"tiles\"\n          onFocus={enableKeyboardCursorToScroll}\n          ref={scrollRef}\n        >\n          {profiles.map((profile) => (\n            <Col>\n              <Card>\n                <Card.Img\n                  variant=\"top\"\n                  src=\"https://www.electrochem.org/wp-content/uploads/2019/09/GeorgiaTech400x400.jpg\"\n                />\n                <Card.Body>\n                  <Card.Title>{profile.name}</Card.Title>\n                  <Card.Text>{profile.description}</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </section>\n      </ScrollContainer>\n    </div>\n  );\n}\n\nexport default BrandProfiles;\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":35,"nodeType":"138","messageId":"139","endLine":1,"endColumn":45},{"ruleId":"136","severity":1,"message":"140","line":3,"column":50,"nodeType":"138","messageId":"139","endLine":3,"endColumn":54},{"ruleId":"132","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"136","severity":1,"message":"143","line":3,"column":15,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":3,"column":23,"nodeType":"138","messageId":"139","endLine":3,"endColumn":32},{"ruleId":"136","severity":1,"message":"145","line":6,"column":20,"nodeType":"138","messageId":"139","endLine":6,"endColumn":24},{"ruleId":"136","severity":1,"message":"146","line":11,"column":3,"nodeType":"138","messageId":"139","endLine":11,"endColumn":17},{"ruleId":"136","severity":1,"message":"147","line":16,"column":7,"nodeType":"138","messageId":"139","endLine":16,"endColumn":14},{"ruleId":"136","severity":1,"message":"148","line":18,"column":7,"nodeType":"138","messageId":"139","endLine":18,"endColumn":19},{"ruleId":"136","severity":1,"message":"149","line":25,"column":28,"nodeType":"138","messageId":"139","endLine":25,"endColumn":46},{"ruleId":"136","severity":1,"message":"150","line":27,"column":11,"nodeType":"138","messageId":"139","endLine":27,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":32,"column":6,"nodeType":"153","endLine":32,"endColumn":23,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":38,"column":32,"nodeType":"157","messageId":"158","endLine":38,"endColumn":34},{"ruleId":"136","severity":1,"message":"159","line":48,"column":13,"nodeType":"138","messageId":"139","endLine":48,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":49,"column":33,"nodeType":"162","messageId":"163","endLine":49,"endColumn":35},{"ruleId":"136","severity":1,"message":"164","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":29},{"ruleId":"136","severity":1,"message":"165","line":6,"column":3,"nodeType":"138","messageId":"139","endLine":6,"endColumn":21},{"ruleId":"136","severity":1,"message":"166","line":7,"column":3,"nodeType":"138","messageId":"139","endLine":7,"endColumn":10},{"ruleId":"155","severity":1,"message":"156","line":77,"column":38,"nodeType":"157","messageId":"158","endLine":77,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":91,"column":38,"nodeType":"157","messageId":"158","endLine":91,"endColumn":40},{"ruleId":"136","severity":1,"message":"167","line":3,"column":3,"nodeType":"138","messageId":"139","endLine":3,"endColumn":33},{"ruleId":"136","severity":1,"message":"165","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":21},{"ruleId":"136","severity":1,"message":"166","line":6,"column":3,"nodeType":"138","messageId":"139","endLine":6,"endColumn":10},{"ruleId":"136","severity":1,"message":"168","line":19,"column":10,"nodeType":"138","messageId":"139","endLine":19,"endColumn":14},{"ruleId":"136","severity":1,"message":"169","line":19,"column":16,"nodeType":"138","messageId":"139","endLine":19,"endColumn":23},{"ruleId":"136","severity":1,"message":"168","line":24,"column":13,"nodeType":"138","messageId":"139","endLine":24,"endColumn":17},{"ruleId":"136","severity":1,"message":"170","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"171","line":1,"column":39,"nodeType":"138","messageId":"139","endLine":1,"endColumn":48},{"ruleId":"136","severity":1,"message":"172","line":1,"column":50,"nodeType":"138","messageId":"139","endLine":1,"endColumn":61},{"ruleId":"136","severity":1,"message":"173","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":11},{"ruleId":"136","severity":1,"message":"144","line":4,"column":23,"nodeType":"138","messageId":"139","endLine":4,"endColumn":32},{"ruleId":"136","severity":1,"message":"174","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":20},{"ruleId":"136","severity":1,"message":"150","line":18,"column":11,"nodeType":"138","messageId":"139","endLine":18,"endColumn":25},{"ruleId":"136","severity":1,"message":"175","line":18,"column":27,"nodeType":"138","messageId":"139","endLine":18,"endColumn":44},{"ruleId":"136","severity":1,"message":"176","line":21,"column":24,"nodeType":"138","messageId":"139","endLine":21,"endColumn":38},{"ruleId":"136","severity":1,"message":"177","line":31,"column":9,"nodeType":"138","messageId":"139","endLine":31,"endColumn":16},{"ruleId":"136","severity":1,"message":"178","line":34,"column":10,"nodeType":"138","messageId":"139","endLine":34,"endColumn":15},{"ruleId":"136","severity":1,"message":"179","line":34,"column":17,"nodeType":"138","messageId":"139","endLine":34,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":53,"column":9,"nodeType":"182","messageId":"183","endLine":60,"endColumn":10},{"ruleId":"136","severity":1,"message":"184","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"185","line":2,"column":35,"nodeType":"138","messageId":"139","endLine":2,"endColumn":41},{"ruleId":"136","severity":1,"message":"186","line":2,"column":43,"nodeType":"138","messageId":"139","endLine":2,"endColumn":48},{"ruleId":"136","severity":1,"message":"140","line":2,"column":50,"nodeType":"138","messageId":"139","endLine":2,"endColumn":54},{"ruleId":"136","severity":1,"message":"187","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":6},{"ruleId":"136","severity":1,"message":"143","line":7,"column":3,"nodeType":"138","messageId":"139","endLine":7,"endColumn":9},{"ruleId":"136","severity":1,"message":"144","line":8,"column":3,"nodeType":"138","messageId":"139","endLine":8,"endColumn":12},{"ruleId":"136","severity":1,"message":"176","line":20,"column":24,"nodeType":"138","messageId":"139","endLine":20,"endColumn":38},{"ruleId":"136","severity":1,"message":"188","line":24,"column":27,"nodeType":"138","messageId":"139","endLine":24,"endColumn":45},{"ruleId":"151","severity":1,"message":"189","line":26,"column":13,"nodeType":"162","endLine":38,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":73,"column":22,"nodeType":"157","messageId":"158","endLine":73,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":89,"column":24,"nodeType":"157","messageId":"158","endLine":89,"endColumn":26},{"ruleId":"136","severity":1,"message":"171","line":1,"column":39,"nodeType":"138","messageId":"139","endLine":1,"endColumn":48},{"ruleId":"136","severity":1,"message":"144","line":3,"column":23,"nodeType":"138","messageId":"139","endLine":3,"endColumn":32},{"ruleId":"136","severity":1,"message":"174","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"176","line":10,"column":24,"nodeType":"138","messageId":"139","endLine":10,"endColumn":38},{"ruleId":"155","severity":1,"message":"156","line":130,"column":33,"nodeType":"157","messageId":"158","endLine":130,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":144,"column":33,"nodeType":"157","messageId":"158","endLine":144,"endColumn":35},{"ruleId":"136","severity":1,"message":"175","line":5,"column":29,"nodeType":"138","messageId":"139","endLine":5,"endColumn":46},{"ruleId":"190","severity":1,"message":"191","line":18,"column":13,"nodeType":"192","endLine":18,"endColumn":46},{"ruleId":"136","severity":1,"message":"187","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"143","line":3,"column":15,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":3,"column":23,"nodeType":"138","messageId":"139","endLine":3,"endColumn":32},{"ruleId":"136","severity":1,"message":"193","line":6,"column":15,"nodeType":"138","messageId":"139","endLine":6,"endColumn":18},{"ruleId":"136","severity":1,"message":"145","line":6,"column":20,"nodeType":"138","messageId":"139","endLine":6,"endColumn":24},{"ruleId":"136","severity":1,"message":"147","line":10,"column":7,"nodeType":"138","messageId":"139","endLine":10,"endColumn":14},{"ruleId":"136","severity":1,"message":"148","line":12,"column":7,"nodeType":"138","messageId":"139","endLine":12,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":20,"column":6,"nodeType":"153","endLine":20,"endColumn":8,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["195"],["196"],"'setDoc' is defined but never used.","'updateDoc' is defined but never used.","'Form' is defined but never used.","'ProfileContext' is defined but never used.","'numbers' is assigned a value but never used.","'clickHandler' is assigned a value but never used.","'setSelectedTagList' is assigned a value but never used.","'clickedProfile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loop'. Either include it or remove the dependency array.","ArrayExpression",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'profilesSet' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'signInWithEmailAndPassword' is defined but never used.","'onAuthStateChanged' is defined but never used.","'signOut' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'ReactDOM' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'app' is defined but never used.","'FieldValue' is defined but never used.","'setClickedProfile' is assigned a value but never used.","'setProfileType' is assigned a value but never used.","'storage' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'doc' is defined but never used.","'setShowAllProfiles' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Row' is defined but never used.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [loop, selectedTagList]",{"range":"203","text":"204"},"Update the dependencies array to be: [loop]",{"range":"205","text":"206"},[1018,1035],"[loop, selectedTagList]",[641,643],"[loop]"]