[{"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/index.js":"1","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/App.js":"2","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/Login.js":"3","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/SignedOutHomePage.js":"4","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/CreateBrandsProfile.js":"5","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerIndividualProfiles.js":"6","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/Signup.js":"7","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/SignedInHomePage.js":"8","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/CreateInfluencerProfile.js":"9","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/firebase-config.js":"10","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/BrandProfiles.js":"11","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerProfiles2.js":"12","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/IndividualBrandProfiles.js":"13","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/components/ProfileCard.js":"14","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/components/ProfileCard2.js":"15"},{"size":197,"mtime":1643993683188,"results":"16","hashOfConfig":"17"},{"size":2815,"mtime":1645150559944,"results":"18","hashOfConfig":"17"},{"size":1755,"mtime":1644981825301,"results":"19","hashOfConfig":"17"},{"size":474,"mtime":1643993683192,"results":"20","hashOfConfig":"17"},{"size":5183,"mtime":1644960382068,"results":"21","hashOfConfig":"17"},{"size":1218,"mtime":1644957752901,"results":"22","hashOfConfig":"17"},{"size":2766,"mtime":1643993683193,"results":"23","hashOfConfig":"17"},{"size":3680,"mtime":1645153462126,"results":"24","hashOfConfig":"17"},{"size":8186,"mtime":1643993683189,"results":"25","hashOfConfig":"17"},{"size":779,"mtime":1643993683187,"results":"26","hashOfConfig":"17"},{"size":7040,"mtime":1645068541499,"results":"27","hashOfConfig":"17"},{"size":6811,"mtime":1645066768221,"results":"28","hashOfConfig":"17"},{"size":1086,"mtime":1645147706756,"results":"29","hashOfConfig":"17"},{"size":2270,"mtime":1645151632623,"results":"30","hashOfConfig":"17"},{"size":7565,"mtime":1645153279147,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xlajlu",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"34"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"34"},"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/index.js",[],["75","76"],"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/App.js",["77","78"],"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/Login.js",["79","80","81","82","83","84"],"import { useState, useContext } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { auth } from \"../firebase-config\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config\";\n\nfunction Login() {\n  const { email, setEmail } = useContext(UserContext);\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  const login = async () => {\n    try {\n      const user = await signInWithEmailAndPassword(auth, email, loginPassword);\n\n      console.log(\"logged in\");\n      const docRef = doc(db, \"Brand\", email);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setProfileType(\"Brand\");\n      } else {\n        // doc.data() will be undefined in this case\n        setProfileType(\"Influencer\");\n      }\n      console.log(profileType);\n\n      navigate(\"/homepage\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h3> Login </h3>\n        <input\n          placeholder=\"Email...\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Password...\"\n          onChange={(event) => {\n            setLoginPassword(event.target.value);\n          }}\n        />\n        <div>\n          <button onClick={login}> Login</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/SignedOutHomePage.js",["85"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SignedOutHomePage() {\n  const navigate = useNavigate();\n  //#endregion\n  const tologin = () => {\n    navigate(\"/login\");\n  };\n  const tosignup = () => {\n    navigate(\"/signup\");\n  };\n\n  return (\n    <div>\n      <button onClick={tologin}>Login</button>\n      <button onClick={tosignup}>Sign up</button>\n    </div>\n  );\n}\n\nexport default SignedOutHomePage;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/CreateBrandsProfile.js",["86","87","88","89","90","91"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nfunction CreateBrandsProfile() {\n  const { email, setEmail } = useContext(UserContext);\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [jobSummary, setJobSummary] = useState(\"defaultdesc\");\n  const [companySummary, setCompanySummary] = useState(\"defaultdesc\");\n  const [expectedSkills, setExpectedSkills] = useState(\"defaultdesc\");\n  const [benefits, setBenefits] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [link, setLink] = useState(\"defaultlink\");\n  const [remote, setRemote] = useState(\"false\");\n  const [tags, setTags] = useState([]);\n\n  //need to do tags, image\n\n  const nameHandler = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = (e) => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const companySummaryHandler = (e) => {\n    setCompanySummary(e.target.value);\n    console.log(companySummary);\n  };\n\n  const jobSummaryHandler = (e) => {\n    console.log(e.target.value);\n    setJobSummary(e.target.value);\n    console.log(jobSummary);\n  };\n\n  const expectedSkillsHandler = (e) => {\n    console.log(e.target.value);\n    setExpectedSkills(e.target.value);\n    console.log(expectedSkills);\n  };\n\n  const benefitsHandler = (e) => {\n    console.log(e.target.value);\n    setBenefits(e.target.value);\n    console.log(benefits);\n  };\n\n  const locationHandler = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const linkHandler = (e) => {\n    setLink(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    try {\n      const addDetails = doc(db, profileType, email);\n      console.log(addDetails);\n      setDoc(\n        addDetails,\n        {\n          jobSummary: jobSummary,\n          companySummary: companySummary,\n          benefits: benefits,\n          expectedSkills: expectedSkills,\n          location: location,\n          socialmedialink: link,\n          extendedProfileCreated: true,\n          remote: remote,\n          tags: tags,\n        },\n        { merge: true }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          required=\"required\"\n          name=\"full_name\"\n          onChange={nameHandler}\n          placeholder=\"Full Name\"\n          value={name}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          required=\"required\"\n          onChange={emailHandler}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"jobSummary\"\n          required=\"required\"\n          onChange={jobSummaryHandler}\n          placeholder=\"Job Summary\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"companySummary\"\n          required=\"required\"\n          onChange={companySummaryHandler}\n          placeholder=\"Company Summary\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"expectedSkills\"\n          onChange={expectedSkillsHandler}\n          placeholder=\"Expected Skills\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"benefits\"\n          onChange={benefitsHandler}\n          placeholder=\"Benefits\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          required=\"required\"\n          onChange={locationHandler}\n          placeholder=\"Location\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"Link to social media\"\n          required=\"required\"\n          onChange={linkHandler}\n          placeholder=\"Instagram\"\n        />\n\n        <br />\n\n        <div>\n          <div className=\"radio-btn-container\">\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setRemote(\"true\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={remote}\n                name=\"remote\"\n                checked={remote == \"true\"}\n              />\n              Remote\n            </div>\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setRemote(\"false\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={remote}\n                name=\"remote\"\n                checked={remote == \"false\"}\n              />\n              Not Remote\n            </div>\n          </div>\n        </div>\n\n        <p>Tags</p>\n        <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n        <input type=\"submit\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreateBrandsProfile;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerIndividualProfiles.js",["92","93","94"],"import { React, useContext, useEffect } from \"react\";\nimport { ClickedProfileContext } from \"../App\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config\";\n\nfunction InfluencerIndividualProfiles() {\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n\n  const { id } = useParams();\n\n  useEffect(async () => {\n    const docRef = doc(db, \"Influencer\", id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setClickedProfile(docSnap.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }, []);\n\n  //#endregion\n\n  return (\n    <div>\n      <p>{clickedProfile.name}</p>\n      <p>{clickedProfile.description}</p>\n      <p>{clickedProfile.location}</p>\n      <p>{clickedProfile.instagram}</p>\n      <p>{clickedProfile.twitter}</p>\n      <p>{clickedProfile.facebook}</p>\n      <p>{clickedProfile.portfolio}</p>\n      <p>{clickedProfile.salary}</p>\n      <p>{clickedProfile.tags}</p>\n      <img src={clickedProfile.avatar}></img>\n      <p>hi</p>\n    </div>\n  );\n}\n\nexport default InfluencerIndividualProfiles;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/Signup.js",["95","96","97","98","99"],"import React from \"react\";\nimport { useState, useContext } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase-config\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { ProfileContext } from \"../App\";\n\nfunction Signup() {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerFullName, setRegisterFullName] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const { profileType, setProfileType } = useContext(ProfileContext);\n\n  const register = async () => {\n    try {\n      const user = await createUserWithEmailAndPassword(\n        auth,\n        registerEmail,\n        registerPassword\n      );\n      console.log(user);\n      await setDoc(doc(db, profileType, registerEmail), {\n        email: registerEmail,\n        name: registerFullName,\n        profileType: profileType,\n        extendedProfileCreated: false,\n      });\n\n      navigate(\"/login\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3> Register User </h3>\n        <input\n          placeholder=\"Full Name\"\n          onChange={(event) => {\n            setRegisterFullName(event.target.value);\n          }}\n        ></input>\n        <input\n          placeholder=\"Email...\"\n          onChange={(event) => {\n            setRegisterEmail(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Password...\"\n          onChange={(event) => {\n            setRegisterPassword(event.target.value);\n          }}\n        />\n        <div>\n          <div className=\"radio-btn-container\">\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setProfileType(\"Influencer\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={profileType}\n                name=\"profileType\"\n                checked={profileType == \"Influencer\"}\n              />\n              Influencer\n            </div>\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setProfileType(\"Brand\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value={profileType}\n                name=\"profileType\"\n                checked={profileType == \"Brand\"}\n              />\n              Brand\n            </div>\n          </div>\n        </div>\n\n        <button onClick={register}> Create User</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/SignedInHomePage.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import { React, useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport {\n  doc,\n  collection,\n  setDoc,\n  updateDoc,\n  getDoc,\n  getDocs,\n} from \"firebase/firestore\";\nimport { ProfileContext, SelectedTagsContext, UserContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport BrandProfiles from \"./BrandProfiles\";\n//import CreateBrandsProfile from \"./pages/CreateBrandsProfile\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport InfluencerProfiles2 from \"./InfluencerProfiles2\";\nimport \"../styles/mui.css\";\nimport ProfileCard2 from \"../components/ProfileCard2\";\n\nfunction SignedInHomePage() {\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const { email, setEmail } = useContext(UserContext);\n  const { selectedTagList, setSelectedTagList } =\n    useContext(SelectedTagsContext);\n  const [tagList, setTagList] = useState([]);\n  const [extendedProfileCreated, setExtendedProfileCreated] = useState(false);\n  const [showAllProfiles, setShowAllProfiles] = useState(true);\n\n  useEffect(async () => {\n    try {\n      let temp = [];\n      const querySnapshot = await getDocs(collection(db, \"influencerTags\"));\n      querySnapshot.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n        temp.push(doc.data().name);\n      });\n      setTagList(temp);\n      //#endregion\n      const docRef = doc(db, profileType, email);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setExtendedProfileCreated(docSnap.data().extendedProfileCreated);\n        console.log(docSnap.data().extendedProfileCreated);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [extendedProfileCreated]);\n\n  const navigate = useNavigate();\n\n  const createinf = () => {\n    navigate(\"/createInfluencerPortfolio\");\n  };\n  const createbrand = () => {\n    navigate(\"/createBrandsPortfolio\");\n  };\n  const handleClick = (tagName) => {\n    const newArr = [...selectedTagList];\n    newArr.push(tagName);\n    setSelectedTagList(newArr);\n    console.log(selectedTagList);\n  };\n\n  const handleDelete = (tagName) => {\n    const newArr = [...selectedTagList];\n\n    const index = newArr.indexOf(tagName);\n    if (index > -1) {\n      newArr.splice(index, 1); // 2nd parameter means remove one item only\n      setSelectedTagList(newArr);\n    }\n  };\n\n  const tagItems = tagList.map((tagName) => (\n    <Chip\n      label={tagName}\n      onClick={() => handleClick(tagName)}\n      onDelete={() => handleDelete(tagName)}\n    />\n  ));\n\n  return (\n    <div>\n      <div>\n        {}\n        {profileType == \"Influencer\" && !extendedProfileCreated ? (\n          <button onClick={createinf}>Create Influencer Profile</button>\n        ) : (\n          <div></div>\n        )}\n      </div>\n\n      <div>\n        {}\n        {profileType == \"Brand\" && !extendedProfileCreated ? (\n          <button onClick={createbrand}>Create Brand Profile</button>\n        ) : (\n          <div></div>\n        )}\n      </div>\n\n      <div>\n        <p>{extendedProfileCreated}</p>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          {tagItems}\n        </Stack>\n      </div>\n\n      {showAllProfiles ? (\n        <div>\n          {profileType == \"Brand\" ? <ProfileCard2 /> : <BrandProfiles />}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default SignedInHomePage;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/CreateInfluencerProfile.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { db } from \"../firebase-config\";\nimport app from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext, ClickedProfileContext } from \"../App\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\n\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nfunction CreateInfluencerProfile() {\n  const { email, setEmail } = useContext(UserContext);\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [instagram, setInstagram] = useState(\"defaultinsta\");\n  const [twitter, setTwitter] = useState(\"defaultTwitter\");\n  const [facebook, setFacebook] = useState(\"defaultFacebook\");\n  const [portfolio, setPortfolio] = useState(\"defaultportfolio\");\n  const [salary, setSalary] = useState(\"defaultsalary\");\n  const [tags, setTags] = useState([]);\n  const storage = getStorage();\n\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n\n  const onFileChange = async (e) => {\n    const file = e.target.files[0];\n    // const storageRef = app.storage().ref();\n    // const fileRef = storageRef.child(file.name);\n    // await fileRef.put(file);\n    // setFileUrl(await fileRef.getDownloadURL());\n    const storage = getStorage();\n    const storageRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n        }\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n      },\n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log(\"File available at\", downloadURL);\n          setFileUrl(downloadURL);\n        });\n      }\n    );\n  };\n\n  const submitHandler = async (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n\n    console.log(profileType);\n    console.log(email);\n    const addDetails = doc(db, profileType, email);\n    console.log(addDetails);\n    setDoc(\n      addDetails,\n      {\n        description: description,\n        location: location,\n        instagram: instagram,\n        facebook: facebook,\n        portfolio: portfolio,\n        salary: salary,\n        extendedProfileCreated: true,\n        tags: tags,\n        avatar: fileUrl,\n      },\n      { merge: true }\n    );\n\n    tags.map((tag) => addToTags(tag));\n    //navigate(`/profiles/${profile.email}`)\n  };\n\n  const addToTags = async (tag) => {\n    // const addTags = doc(db, tags, tag);\n\n    const docRef = doc(db, \"influencerTags\", tag);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      let oldinfluencers = docSnap.data().influencers;\n      oldinfluencers.push(email);\n      let oldsize = docSnap.data().size;\n\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: oldsize + 1,\n        influencers: oldinfluencers,\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 1,\n        influencers: [email],\n      });\n    }\n  };\n\n  const nameHandler = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = (e) => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const descriptionHandler = (e) => {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n    console.log(description);\n  };\n\n  const locationHandler = (e) => {\n    console.log(e.target.value);\n    setLocation(e.target.value);\n    console.log(location);\n  };\n\n  const instagramHandler = (e) => {\n    console.log(e.target.value);\n    setInstagram(e.target.value);\n    console.log(instagram);\n  };\n\n  const twitterHandler = (e) => {\n    console.log(e.target.value);\n    setTwitter(e.target.value);\n    console.log(twitter);\n  };\n\n  const facebookHandler = (e) => {\n    console.log(e.target.value);\n    setFacebook(e.target.value);\n    console.log(facebook);\n  };\n\n  const portfolioHandler = (e) => {\n    console.log(e.target.value);\n    setPortfolio(e.target.value);\n    console.log(portfolio);\n  };\n\n  const salaryHandler = (e) => {\n    console.log(e.target.value);\n    setSalary(e.target.value);\n    console.log(salary);\n  };\n\n  // const submitHandler = (e) => {\n  //   console.log(profileType)\n  //   e.preventDefault();\n  //   try {\n  //     console.log(profileType)\n  //     console.log(email)\n  //     const addDetails = doc(db, profileType, email);\n  //     console.log(addDetails);\n  //     setDoc(\n  //       addDetails,\n  //       {\n  //         description: description,\n  //         location: location,\n  //         instagram: instagram,\n  //         facebook: facebook,\n  //         portfolio: portfolio,\n  //         salary: salary,\n  //         extendedProfileCreated: true,\n  //         tags: tags,\n  //       },\n  //       { merge: true }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          required=\"required\"\n          name=\"full_name\"\n          onChange={nameHandler}\n          placeholder=\"Full Name\"\n          value={name}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          required=\"required\"\n          onChange={emailHandler}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"description\"\n          required=\"required\"\n          onChange={descriptionHandler}\n          placeholder=\"Description\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          required=\"required\"\n          onChange={locationHandler}\n          placeholder=\"Location\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"instagram\"\n          required=\"required\"\n          onChange={instagramHandler}\n          placeholder=\"Instagram\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"twitter\"\n          required=\"required\"\n          onChange={twitterHandler}\n          placeholder=\"Twitter\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"Facebook\"\n          required=\"required\"\n          onChange={facebookHandler}\n          placeholder=\"Facebook\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"portfolio\"\n          required=\"required\"\n          onChange={portfolioHandler}\n          placeholder=\"Portfolio\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"salary\"\n          required=\"required\"\n          onChange={salaryHandler}\n          placeholder=\"Salary\"\n        />\n        <br />\n        <p>Tags</p>\n        <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n        <input type=\"file\" onChange={onFileChange} />\n        <button onSubmit={submitHandler}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateInfluencerProfile;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/firebase-config.js",[],"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/BrandProfiles.js",["127","128","129","130","131","132","133","134","135"],"import React, { Component } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport \"../styles/profileCards.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter?.map((item) => {\n      return orig?.includes(item);\n    });\n    return !res?.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n}\n\n// components\nclass BrandProfiles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [],\n      profiles: [],\n    };\n\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleListTagClick = this.handleListTagClick.bind(this);\n  }\n\n  async componentDidMount() {\n    let temp = [];\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Brand\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      if (doc.data().extendedProfileCreated == true) {\n        temp.push(doc.data());\n      }\n    });\n    this.setState({ profiles: temp });\n    console.log(this.state.profiles);\n  }\n\n  handleTagChange(tags) {\n    this.setState({ tags });\n  }\n\n  handleListTagClick(tag) {\n    this.setState({ tags: [...this.state.tags, tag] });\n  }\n\n  render() {\n    return (\n      <div>\n        <TagInput onTagChange={this.handleTagChange} tags={this.state.tags} />\n        <ExampleList\n          items={this.state.profiles}\n          filter={this.state.tags}\n          onTagClick={this.handleListTagClick}\n        />\n      </div>\n    );\n  }\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      tags: this.props.tags || [],\n    };\n\n    this.handleNewTag = this.handleNewTag.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleTagDelete = this.handleTagDelete.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.notDuplicate = this.notDuplicate.bind(this);\n    this.updateControlledTags = this.updateControlledTags.bind(this);\n  }\n\n  handleNewTag(tags) {\n    if (this.props.onNewTag) this.props.onNewTag(tags);\n    if (this.props.onTagChange) this.props.onTagChange(tags);\n  }\n\n  handleInputChange({ target: { value: inputValue } }) {\n    inputValue = inputValue == \",\" ? \"\" : inputValue;\n    this.setState({ inputValue });\n  }\n\n  handleKeyDown(e) {\n    let {\n      key,\n      target: { value },\n    } = e;\n    let { tags } = this.state;\n    switch (key) {\n      case \"Tab\":\n        if (value) e.preventDefault();\n      case \"Enter\":\n      case \",\":\n        value = value.trim();\n        if (value && this.notDuplicate(tags, value)) {\n          this.addTag(value);\n        } else {\n          this.setState({ inputValue: \"\" });\n        }\n        break;\n      case \"Backspace\":\n        if (!value) {\n          this.handleTagDelete(tags.length - 1);\n        }\n        break;\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n\n    tags.splice(index, 1);\n    this.setState({ tags }, () => {\n      if (callback) callback();\n    });\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({ tags: [...this.state.tags, tag], inputValue: \"\" }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  updateControlledTags(tags) {\n    if (tags && !Helpers.hasDuplicates(tags)) {\n      this.setState({ tags }, () => {\n        // this.props.onTagChange(tags);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateControlledTags(nextProps.tags);\n  }\n\n  render() {\n    return (\n      <span className=\"tagInputWrapper\">\n        <TagsList\n          tags={this.state.tags}\n          onTagDelete={this.handleTagDelete}\n          hashtag={this.props.hashtag}\n        />\n        <input\n          name=\"tagInput\"\n          className=\"tagInput\"\n          placeholder=\"enter a tag...\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n        />\n      </span>\n    );\n  }\n}\n\nconst TagsList = ({ tags, onTagDelete, hashtag }) => {\n  let list = tags.map((tag, index) => (\n    <Tag name={tag} onDelete={onTagDelete} index={index} hashtag={hashtag} />\n  ));\n  return (\n    <ul name=\"tagsList\" className=\"tagsList\">\n      {list}\n    </ul>\n  );\n};\n\nconst Tag = ({ name, index, onDelete, hashtag, hashtagStyled }) => {\n  return (\n    <li>\n      {hashtag && (\n        <span\n          style={{ color: \"#898989\", fontWeight: \"bold\", ...hashtagStyled }}\n        >\n          #{\" \"}\n        </span>\n      )}\n      {name}\n      <a href=\"#\" onClick={(e) => onDelete(index, e)}>\n        x\n      </a>\n    </li>\n  );\n};\n\nconst ExampleList = ({ items, filter, onTagClick }) => {\n  let filtered = items.filter((item) => Helpers.contains(item.tags, filter));\n\n  let renderedItems = filtered.map(\n    ({ name, jobSummary, tags, extendedProfileCreated, email }, index) => {\n      return (\n        <ExampleListItem\n          name={name}\n          jobSummary={jobSummary}\n          tags={tags}\n          key={index}\n          extendedProfileCreated={extendedProfileCreated}\n          onClick={onTagClick}\n          email={email}\n        />\n      );\n    }\n  );\n\n  return (\n    <div>\n      <ul\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          padding: \"0px\",\n          gridGap: \"10px\",\n        }}\n      >\n        {renderedItems}\n      </ul>\n    </div>\n  );\n};\n\nconst ExampleListItem = ({\n  name,\n  jobSummary,\n  tags,\n  extendedProfileCreated,\n  key,\n  email,\n  onClick,\n}) => {\n  const renderedTags = tags?.map((tag) => (\n    <li onClick={(e) => onClick(tag, e)} className=\"tag clickable\">\n      {tag}\n    </li>\n  ));\n  //#endregion\n  console.log(extendedProfileCreated);\n\n  return (\n    <li\n      style={{\n        padding: 10,\n        listStyle: \"none\",\n        background: \"#efefef\",\n        borderRadius: \"10px\",\n        boxShadow: \"1px 1px 5px #aaa\",\n      }}\n    >\n      <h3>{name}</h3>\n      <p>{jobSummary}</p>\n\n      <ul className=\"tagsList\" style={{ padding: 0 }}>\n        {renderedTags}\n      </ul>\n      <div>\n        <Link to={{ pathname: `/companies/${name}`, state: { email: email } }}>\n          View Profile\n        </Link>\n        {/* // <Link>\n        //   to={`/companies/${name}`}\n        //   params={{ email: email }}\n        //   className=\"button-17\"\n        //   style={{ textDecoration: \"none\" }}\n        // >\n        //   View Profile\n        // </Link> */}\n      </div>\n    </li>\n  );\n};\n\nexport default BrandProfiles;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerProfiles2.js",["136","137","138","139","140","141","142","143","144"],"import React, { Component } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport \"../styles/profileCards.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter?.map((item) => {\n      return orig?.includes(item);\n    });\n    return !res?.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n}\n\n// components\nclass InfluencerProfiles2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [],\n      profiles: [],\n    };\n\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleListTagClick = this.handleListTagClick.bind(this);\n  }\n\n  async componentDidMount() {\n    let temp = [];\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      if (doc.data().extendedProfileCreated == true) {\n        temp.push(doc.data());\n      }\n    });\n    this.setState({ profiles: temp });\n    console.log(this.state.profiles);\n  }\n\n  handleTagChange(tags) {\n    this.setState({ tags });\n  }\n\n  handleListTagClick(tag) {\n    this.setState({ tags: [...this.state.tags, tag] });\n  }\n\n  render() {\n    return (\n      <div>\n        <TagInput onTagChange={this.handleTagChange} tags={this.state.tags} />\n        <ExampleList\n          items={this.state.profiles}\n          filter={this.state.tags}\n          onTagClick={this.handleListTagClick}\n        />\n      </div>\n    );\n  }\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      tags: this.props.tags || [],\n    };\n\n    this.handleNewTag = this.handleNewTag.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleTagDelete = this.handleTagDelete.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.notDuplicate = this.notDuplicate.bind(this);\n    this.updateControlledTags = this.updateControlledTags.bind(this);\n  }\n\n  handleNewTag(tags) {\n    if (this.props.onNewTag) this.props.onNewTag(tags);\n    if (this.props.onTagChange) this.props.onTagChange(tags);\n  }\n\n  handleInputChange({ target: { value: inputValue } }) {\n    inputValue = inputValue == \",\" ? \"\" : inputValue;\n    this.setState({ inputValue });\n  }\n\n  handleKeyDown(e) {\n    let {\n      key,\n      target: { value },\n    } = e;\n    let { tags } = this.state;\n    switch (key) {\n      case \"Tab\":\n        if (value) e.preventDefault();\n      case \"Enter\":\n      case \",\":\n        value = value.trim();\n        if (value && this.notDuplicate(tags, value)) {\n          this.addTag(value);\n        } else {\n          this.setState({ inputValue: \"\" });\n        }\n        break;\n      case \"Backspace\":\n        if (!value) {\n          this.handleTagDelete(tags.length - 1);\n        }\n        break;\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n\n    tags.splice(index, 1);\n    this.setState({ tags }, () => {\n      if (callback) callback();\n    });\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({ tags: [...this.state.tags, tag], inputValue: \"\" }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  updateControlledTags(tags) {\n    if (tags && !Helpers.hasDuplicates(tags)) {\n      this.setState({ tags }, () => {\n        // this.props.onTagChange(tags);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateControlledTags(nextProps.tags);\n  }\n\n  render() {\n    return (\n      <span className=\"tagInputWrapper\">\n        <TagsList\n          tags={this.state.tags}\n          onTagDelete={this.handleTagDelete}\n          hashtag={this.props.hashtag}\n        />\n        <input\n          name=\"tagInput\"\n          className=\"tagInput\"\n          placeholder=\"enter a tag...\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n        />\n      </span>\n    );\n  }\n}\n\nconst TagsList = ({ tags, onTagDelete, hashtag }) => {\n  let list = tags.map((tag, index) => (\n    <Tag name={tag} onDelete={onTagDelete} index={index} hashtag={hashtag} />\n  ));\n  return (\n    <ul name=\"tagsList\" className=\"tagsList\">\n      {list}\n    </ul>\n  );\n};\n\nconst Tag = ({ name, index, onDelete, hashtag, hashtagStyled }) => {\n  return (\n    <li>\n      {hashtag && (\n        <span\n          style={{ color: \"#898989\", fontWeight: \"bold\", ...hashtagStyled }}\n        >\n          #{\" \"}\n        </span>\n      )}\n      {name}\n      <a href=\"#\" onClick={(e) => onDelete(index, e)}>\n        x\n      </a>\n    </li>\n  );\n};\n\nconst ExampleList = ({ items, filter, onTagClick }) => {\n  let filtered = items.filter((item) => Helpers.contains(item.tags, filter));\n\n  let renderedItems = filtered.map(\n    ({ name, description, email, tags, extendedProfileCreated }, index) => {\n      return (\n        <ExampleListItem\n          name={name}\n          description={description}\n          email={email}\n          tags={tags}\n          key={index}\n          extendedProfileCreated={extendedProfileCreated}\n          onClick={onTagClick}\n        />\n      );\n    }\n  );\n\n  return (\n    <div>\n      <ul\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          padding: \"0px\",\n          gridGap: \"10px\",\n        }}\n      >\n        {renderedItems}\n      </ul>\n    </div>\n  );\n};\n\nconst ExampleListItem = ({\n  name,\n  description,\n  email,\n  tags,\n  extendedProfileCreated,\n  key,\n  onClick,\n}) => {\n  const renderedTags = tags?.map((tag) => (\n    <li onClick={(e) => onClick(tag, e)} className=\"tag clickable\">\n      {tag}\n    </li>\n  ));\n  //#endregion\n  console.log(extendedProfileCreated);\n\n  return (\n    <li\n      style={{\n        padding: 10,\n        listStyle: \"none\",\n        background: \"#efefef\",\n        borderRadius: \"10px\",\n        boxShadow: \"1px 1px 5px #aaa\",\n      }}\n    >\n      <h3>{name}</h3>\n      <p>{description}</p>\n\n      <ul className=\"tagsList\" style={{ padding: 0 }}>\n        {renderedTags}\n      </ul>\n      <div>\n        <Link\n          to={`/profiles/${email}`}\n          className=\"button-17\"\n          style={{ textDecoration: \"none\" }}\n        >\n          View Profile\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nexport default InfluencerProfiles2;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/IndividualBrandProfiles.js",["145","146"],"import { React, useContext, useEffect } from \"react\";\nimport { ClickedProfileContext } from \"../App\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config\";\n\nfunction IndividualBrandProfiles(props) {\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n  const { email } = props.state;\n  const { brandname } = useParams();\n\n  useEffect(async () => {\n    const docRef = doc(db, \"Brand\", brandname);\n    const docSnap = await getDoc(docRef);\n\n    console.log(email);\n    if (docSnap.exists()) {\n      setClickedProfile(docSnap.data());\n    } else {\n      console.log(brandname);\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <p>{clickedProfile.jobSummary}</p>\n      <p>{clickedProfile.description}</p>\n      <p>{clickedProfile.location}</p>\n      <p>{clickedProfile.companySummary}</p>\n      <p>{clickedProfile.tags}</p>\n    </div>\n  );\n}\nexport default IndividualBrandProfiles;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/components/ProfileCard.js",["147","148","149","150"],"import React from \"react\";\nimport \"./profilecardss.scss\";\n\nfunction ProfileCard() {\n  return (\n    <div>\n      <>\n        <input id=\"slider\" className=\"customSlider\" type=\"checkbox\" />\n        <label htmlFor=\"slider\" />\n        <div className=\"wrapper\">\n          <div className=\"top-icons\">\n            <i className=\"fas fa-long-arrow-alt-left\" />\n            <i className=\"fas fa-ellipsis-v\" />\n            <i className=\"far fa-heart\" />\n          </div>\n          <div className=\"profile\">\n            <img\n              src=\"https://images.unsplash.com/photo-1484186139897-d5fc6b908812?ixlib=rb-0.3.5&s=9358d797b2e1370884aa51b0ab94f706&auto=format&fit=crop&w=200&q=80%20500w\"\n              className=\"thumbnail\"\n            />\n            <div className=\"check\">\n              <i className=\"fas fa-check\" />\n            </div>\n            <h3 className=\"name\">Beverly Little</h3>\n            <p className=\"title\">Javascript Developer</p>\n            <p className=\"description\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque\n              aliquam aliquid porro!\n            </p>\n            <button type=\"button\" className=\"btn\">\n              Hire Me\n            </button>\n          </div>\n          <div className=\"social-icons\">\n            <div className=\"icon\">\n              <a href=\"/\">\n                <i className=\"fab fa-dribbble\" />\n              </a>\n              <h4>12.8k</h4>\n              <p>Followers</p>\n            </div>\n            <div className=\"icon\">\n              <a href=\"#\">\n                <i className=\"fab fa-behance\" />\n              </a>\n              <h4>12.8k</h4>\n              <p>Followers</p>\n            </div>\n            <div className=\"icon\">\n              <a href=\"#\">\n                <i className=\"fab fa-twitter\" />\n              </a>\n              <h4>12.8k</h4>\n              <p>Followers</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"concept\">\n          concept by\n          <a\n            href=\"https://dribbble.com/shots/4346772-Profile-Card\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-dribbble\" /> Vijay Verma\n          </a>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default ProfileCard;\n","/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/components/ProfileCard2.js",["151","152","153","154","155","156","157","158","159","160"],"import React, { Component } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport \"./profilecardss.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter?.map((item) => {\n      return orig?.includes(item);\n    });\n    return !res?.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n}\n\n// components\nclass ProfileCard2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [],\n      profiles: [],\n    };\n\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleListTagClick = this.handleListTagClick.bind(this);\n  }\n\n  async componentDidMount() {\n    let temp = [];\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      if (doc.data().extendedProfileCreated == true) {\n        temp.push(doc.data());\n      }\n    });\n    this.setState({ profiles: temp });\n    console.log(this.state.profiles);\n  }\n\n  handleTagChange(tags) {\n    this.setState({ tags });\n  }\n\n  handleListTagClick(tag) {\n    this.setState({ tags: [...this.state.tags, tag] });\n  }\n\n  render() {\n    return (\n      <div>\n        <TagInput onTagChange={this.handleTagChange} tags={this.state.tags} />\n        <ExampleList\n          items={this.state.profiles}\n          filter={this.state.tags}\n          onTagClick={this.handleListTagClick}\n        />\n      </div>\n    );\n  }\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      tags: this.props.tags || [],\n    };\n\n    this.handleNewTag = this.handleNewTag.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleTagDelete = this.handleTagDelete.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.notDuplicate = this.notDuplicate.bind(this);\n    this.updateControlledTags = this.updateControlledTags.bind(this);\n  }\n\n  handleNewTag(tags) {\n    if (this.props.onNewTag) this.props.onNewTag(tags);\n    if (this.props.onTagChange) this.props.onTagChange(tags);\n  }\n\n  handleInputChange({ target: { value: inputValue } }) {\n    inputValue = inputValue == \",\" ? \"\" : inputValue;\n    this.setState({ inputValue });\n  }\n\n  handleKeyDown(e) {\n    let {\n      key,\n      target: { value },\n    } = e;\n    let { tags } = this.state;\n    switch (key) {\n      case \"Tab\":\n        if (value) e.preventDefault();\n      case \"Enter\":\n      case \",\":\n        value = value.trim();\n        if (value && this.notDuplicate(tags, value)) {\n          this.addTag(value);\n        } else {\n          this.setState({ inputValue: \"\" });\n        }\n        break;\n      case \"Backspace\":\n        if (!value) {\n          this.handleTagDelete(tags.length - 1);\n        }\n        break;\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n\n    tags.splice(index, 1);\n    this.setState({ tags }, () => {\n      if (callback) callback();\n    });\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({ tags: [...this.state.tags, tag], inputValue: \"\" }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  updateControlledTags(tags) {\n    if (tags && !Helpers.hasDuplicates(tags)) {\n      this.setState({ tags }, () => {\n        // this.props.onTagChange(tags);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateControlledTags(nextProps.tags);\n  }\n\n  render() {\n    return (\n      <span className=\"tagInputWrapper\">\n        <TagsList\n          tags={this.state.tags}\n          onTagDelete={this.handleTagDelete}\n          hashtag={this.props.hashtag}\n        />\n        <input\n          name=\"tagInput\"\n          className=\"tagInput\"\n          placeholder=\"enter a tag...\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n        />\n      </span>\n    );\n  }\n}\n\nconst TagsList = ({ tags, onTagDelete, hashtag }) => {\n  let list = tags.map((tag, index) => (\n    <Tag name={tag} onDelete={onTagDelete} index={index} hashtag={hashtag} />\n  ));\n  return (\n    <ul name=\"tagsList\" className=\"tagsList\">\n      {list}\n    </ul>\n  );\n};\n\nconst Tag = ({ name, index, onDelete, hashtag, hashtagStyled }) => {\n  return (\n    <li>\n      {hashtag && (\n        <span\n          style={{ color: \"#898989\", fontWeight: \"bold\", ...hashtagStyled }}\n        >\n          #{\" \"}\n        </span>\n      )}\n      {name}\n      <a href=\"#\" onClick={(e) => onDelete(index, e)}>\n        x\n      </a>\n    </li>\n  );\n};\n\nconst ExampleList = ({ items, filter, onTagClick }) => {\n  let filtered = items.filter((item) => Helpers.contains(item.tags, filter));\n\n  let renderedItems = filtered.map(\n    ({ name, description, email, tags, extendedProfileCreated }, index) => {\n      return (\n        <ExampleListItem\n          name={name}\n          description={description}\n          email={email}\n          tags={tags}\n          key={index}\n          extendedProfileCreated={extendedProfileCreated}\n          onClick={onTagClick}\n        />\n      );\n    }\n  );\n\n  return (\n    <div>\n      <ul\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          padding: \"0px\",\n          gridGap: \"10px\",\n        }}\n      >\n        {renderedItems}\n      </ul>\n    </div>\n  );\n};\n\nconst ExampleListItem = ({\n  name,\n  description,\n  email,\n  tags,\n  extendedProfileCreated,\n  key,\n  onClick,\n}) => {\n  const renderedTags = tags?.slice(0, 10).map((tag) => (\n    <li onClick={(e) => onClick(tag, e)} className=\"tag clickable\">\n      {tag}\n    </li>\n  ));\n  //#endregion\n  console.log(extendedProfileCreated);\n\n  return (\n    <div className=\"main\">\n      <>\n        <input id=\"slider\" className=\"customSlider\" type=\"checkbox\" />\n        <label htmlFor=\"slider\" />\n        <div className=\"wrapper\">\n          <div className=\"top-icons\">\n            <i className=\"fas fa-long-arrow-alt-left\" />\n            <i className=\"fas fa-ellipsis-v\" />\n            <i className=\"far fa-heart\" />\n          </div>\n          <div className=\"profile\">\n            <img\n              src=\"https://images.unsplash.com/photo-1484186139897-d5fc6b908812?ixlib=rb-0.3.5&s=9358d797b2e1370884aa51b0ab94f706&auto=format&fit=crop&w=200&q=80%20500w\"\n              className=\"thumbnail\"\n            />\n            <div className=\"check\">\n              <i className=\"fas fa-check\" />\n            </div>\n            <h3 className=\"name\">{name}</h3>\n            <p className=\"title\">{description}</p>\n            <ul className=\"tagsList\" style={{ padding: 0 }}>\n              {renderedTags}\n            </ul>\n          </div>\n          <div>\n            <div>\n              <Link\n                to={`/profiles/${email}`}\n                className=\"button-17\"\n                style={{ textDecoration: \"none\" }}\n              >\n                View Profile\n              </Link>\n            </div>\n          </div>\n        </div>\n      </>\n    </div>\n  );\n};\n\nexport default ProfileCard2;\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":35,"nodeType":"167","messageId":"168","endLine":1,"endColumn":45},{"ruleId":"165","severity":1,"message":"169","line":3,"column":50,"nodeType":"167","messageId":"168","endLine":3,"endColumn":54},{"ruleId":"165","severity":1,"message":"170","line":3,"column":3,"nodeType":"167","messageId":"168","endLine":3,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"172","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":10},{"ruleId":"165","severity":1,"message":"173","line":19,"column":10,"nodeType":"167","messageId":"168","endLine":19,"endColumn":14},{"ruleId":"165","severity":1,"message":"174","line":19,"column":16,"nodeType":"167","messageId":"168","endLine":19,"endColumn":23},{"ruleId":"165","severity":1,"message":"173","line":24,"column":13,"nodeType":"167","messageId":"168","endLine":24,"endColumn":17},{"ruleId":"165","severity":1,"message":"175","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"165","severity":1,"message":"176","line":1,"column":39,"nodeType":"167","messageId":"168","endLine":1,"endColumn":48},{"ruleId":"165","severity":1,"message":"177","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":32},{"ruleId":"165","severity":1,"message":"178","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":20},{"ruleId":"165","severity":1,"message":"179","line":10,"column":24,"nodeType":"167","messageId":"168","endLine":10,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":172,"column":33,"nodeType":"182","messageId":"183","endLine":172,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":186,"column":33,"nodeType":"182","messageId":"183","endLine":186,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":14,"column":13,"nodeType":"186","endLine":24,"endColumn":4},{"ruleId":"184","severity":1,"message":"187","line":24,"column":6,"nodeType":"188","endLine":24,"endColumn":8,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":39,"column":7,"nodeType":"192","endLine":39,"endColumn":40},{"ruleId":"165","severity":1,"message":"193","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":29},{"ruleId":"165","severity":1,"message":"171","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":21},{"ruleId":"165","severity":1,"message":"172","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":10},{"ruleId":"180","severity":1,"message":"181","line":77,"column":38,"nodeType":"182","messageId":"183","endLine":77,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":91,"column":38,"nodeType":"182","messageId":"183","endLine":91,"endColumn":40},{"ruleId":"165","severity":1,"message":"194","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"195","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":41},{"ruleId":"165","severity":1,"message":"196","line":2,"column":43,"nodeType":"167","messageId":"168","endLine":2,"endColumn":48},{"ruleId":"165","severity":1,"message":"169","line":2,"column":50,"nodeType":"167","messageId":"168","endLine":2,"endColumn":54},{"ruleId":"165","severity":1,"message":"197","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":9},{"ruleId":"165","severity":1,"message":"177","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":12},{"ruleId":"165","severity":1,"message":"198","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":27},{"ruleId":"165","severity":1,"message":"179","line":23,"column":24,"nodeType":"167","messageId":"168","endLine":23,"endColumn":38},{"ruleId":"165","severity":1,"message":"199","line":24,"column":18,"nodeType":"167","messageId":"168","endLine":24,"endColumn":26},{"ruleId":"165","severity":1,"message":"200","line":29,"column":27,"nodeType":"167","messageId":"168","endLine":29,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":31,"column":13,"nodeType":"186","endLine":54,"endColumn":4},{"ruleId":"184","severity":1,"message":"201","line":54,"column":6,"nodeType":"188","endLine":54,"endColumn":30,"suggestions":"202"},{"ruleId":"180","severity":1,"message":"181","line":93,"column":22,"nodeType":"182","messageId":"183","endLine":93,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":102,"column":22,"nodeType":"182","messageId":"183","endLine":102,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":123,"column":24,"nodeType":"182","messageId":"183","endLine":123,"endColumn":26},{"ruleId":"165","severity":1,"message":"176","line":1,"column":39,"nodeType":"167","messageId":"168","endLine":1,"endColumn":48},{"ruleId":"165","severity":1,"message":"203","line":1,"column":50,"nodeType":"167","messageId":"168","endLine":1,"endColumn":61},{"ruleId":"165","severity":1,"message":"204","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":11},{"ruleId":"165","severity":1,"message":"177","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":32},{"ruleId":"165","severity":1,"message":"178","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":20},{"ruleId":"165","severity":1,"message":"205","line":18,"column":11,"nodeType":"167","messageId":"168","endLine":18,"endColumn":25},{"ruleId":"165","severity":1,"message":"206","line":18,"column":27,"nodeType":"167","messageId":"168","endLine":18,"endColumn":44},{"ruleId":"165","severity":1,"message":"179","line":21,"column":24,"nodeType":"167","messageId":"168","endLine":21,"endColumn":38},{"ruleId":"165","severity":1,"message":"207","line":31,"column":9,"nodeType":"167","messageId":"168","endLine":31,"endColumn":16},{"ruleId":"165","severity":1,"message":"208","line":34,"column":10,"nodeType":"167","messageId":"168","endLine":34,"endColumn":15},{"ruleId":"165","severity":1,"message":"209","line":34,"column":17,"nodeType":"167","messageId":"168","endLine":34,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":53,"column":9,"nodeType":"212","messageId":"213","endLine":60,"endColumn":10},{"ruleId":"165","severity":1,"message":"214","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":21},{"ruleId":"165","severity":1,"message":"177","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":32},{"ruleId":"165","severity":1,"message":"215","line":3,"column":34,"nodeType":"167","messageId":"168","endLine":3,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":42,"column":45,"nodeType":"182","messageId":"183","endLine":42,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":96,"column":29,"nodeType":"182","messageId":"183","endLine":96,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":106,"column":5,"nodeType":"212","messageId":"213","endLine":123,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":109,"column":7,"nodeType":"218","messageId":"219","endLine":109,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":208,"column":7,"nodeType":"192","endLine":208,"endColumn":55},{"ruleId":"165","severity":1,"message":"214","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":21},{"ruleId":"165","severity":1,"message":"177","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":32},{"ruleId":"165","severity":1,"message":"215","line":3,"column":34,"nodeType":"167","messageId":"168","endLine":3,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":41,"column":45,"nodeType":"182","messageId":"183","endLine":41,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":95,"column":29,"nodeType":"182","messageId":"183","endLine":95,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":105,"column":5,"nodeType":"212","messageId":"213","endLine":122,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":108,"column":7,"nodeType":"218","messageId":"219","endLine":108,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":207,"column":7,"nodeType":"192","endLine":207,"endColumn":55},{"ruleId":"184","severity":1,"message":"185","line":14,"column":13,"nodeType":"186","endLine":26,"endColumn":4},{"ruleId":"184","severity":1,"message":"222","line":26,"column":6,"nodeType":"188","endLine":26,"endColumn":8,"suggestions":"223"},{"ruleId":"190","severity":1,"message":"191","line":17,"column":13,"nodeType":"192","endLine":20,"endColumn":15},{"ruleId":"220","severity":1,"message":"221","line":43,"column":15,"nodeType":"192","endLine":43,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":50,"column":15,"nodeType":"192","endLine":50,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":60,"column":11,"nodeType":"192","messageId":"226","endLine":63,"endColumn":12,"fix":"227"},{"ruleId":"165","severity":1,"message":"214","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":21},{"ruleId":"165","severity":1,"message":"177","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":32},{"ruleId":"165","severity":1,"message":"215","line":3,"column":34,"nodeType":"167","messageId":"168","endLine":3,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":41,"column":45,"nodeType":"182","messageId":"183","endLine":41,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":95,"column":29,"nodeType":"182","messageId":"183","endLine":95,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":105,"column":5,"nodeType":"212","messageId":"213","endLine":122,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":108,"column":7,"nodeType":"218","messageId":"219","endLine":108,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":207,"column":7,"nodeType":"192","endLine":207,"endColumn":55},{"ruleId":"190","severity":1,"message":"191","line":278,"column":13,"nodeType":"192","endLine":281,"endColumn":15},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'onAuthStateChanged' is defined but never used.","'signOut' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'ReactDOM' is defined but never used.","'useEffect' is defined but never used.","'updateDoc' is defined but never used.","'FieldValue' is defined but never used.","'setProfileType' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'id' and 'setClickedProfile'. Either include them or remove the dependency array.","ArrayExpression",["230"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'signInWithEmailAndPassword' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'setDoc' is defined but never used.","'InfluencerProfiles2' is defined but never used.","'setEmail' is assigned a value but never used.","'setShowAllProfiles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email' and 'profileType'. Either include them or remove the dependency array.",["231"],"'useCallback' is defined but never used.","'app' is defined but never used.","'clickedProfile' is assigned a value but never used.","'setClickedProfile' is assigned a value but never used.","'storage' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'doc' is defined but never used.","'getDoc' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'brandname', 'email', and 'setClickedProfile'. Either include them or remove the dependency array.",["232"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"233","text":"234"},"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},[2088,2088]," rel=\"noreferrer\"","Update the dependencies array to be: [id, setClickedProfile]",{"range":"241","text":"242"},"Update the dependencies array to be: [email, extendedProfileCreated, profileType]",{"range":"243","text":"244"},"Update the dependencies array to be: [brandname, email, setClickedProfile]",{"range":"245","text":"246"},[704,706],"[id, setClickedProfile]",[1916,1940],"[email, extendedProfileCreated, profileType]",[799,801],"[brandname, email, setClickedProfile]"]