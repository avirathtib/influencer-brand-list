{"ast":null,"code":"var _jsxFileName = \"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/TemporaryInfluencerProfiles.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter.map(item => {\n      return orig.includes(item);\n    });\n    return !res.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n\n} // components\n\n\nclass TemporaryInfluencerProfiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [\"game\"],\n      profiles: []\n    };\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleListTagClick = this.handleListTagClick.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      temp.push(doc.data());\n    });\n    this.setState({\n      profiles: temp\n    });\n  }\n\n  handleTagChange(tags) {\n    this.setState({\n      tags\n    });\n  }\n\n  handleListTagClick(tag) {\n    this.setState({\n      tags: [...this.state.tags, tag]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TagInput, {\n        onTagChange: this.handleTagChange,\n        tags: this.state.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExampleList, {\n        items: projects,\n        filter: this.state.tags,\n        onTagClick: this.handleListTagClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      tags: this.props.tags || []\n    };\n    this.handleNewTag = this.handleNewTag.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleTagDelete = this.handleTagDelete.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.notDuplicate = this.notDuplicate.bind(this);\n    this.updateControlledTags = this.updateControlledTags.bind(this);\n  }\n\n  handleNewTag(tags) {\n    if (this.props.onNewTag) this.props.onNewTag(tags);\n    if (this.props.onTagChange) this.props.onTagChange(tags);\n  }\n\n  handleInputChange(_ref) {\n    let {\n      target: {\n        value: inputValue\n      }\n    } = _ref;\n    inputValue = inputValue == \",\" ? \"\" : inputValue;\n    this.setState({\n      inputValue\n    });\n  }\n\n  handleKeyDown(e) {\n    let {\n      key,\n      target: {\n        value\n      }\n    } = e;\n    let {\n      tags\n    } = this.state;\n\n    switch (key) {\n      case \"Tab\":\n        if (value) e.preventDefault();\n\n      case \"Enter\":\n      case \",\":\n        value = value.trim();\n\n        if (value && this.notDuplicate(tags, value)) {\n          this.addTag(value);\n        } else {\n          this.setState({\n            inputValue: \"\"\n          });\n        }\n\n        break;\n\n      case \"Backspace\":\n        if (!value) {\n          this.handleTagDelete(tags.length - 1);\n        }\n\n        break;\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n    tags.splice(index, 1);\n    this.setState({\n      tags\n    }, () => {\n      if (callback) callback();\n    });\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({\n        tags: [...this.state.tags, tag],\n        inputValue: \"\"\n      }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  updateControlledTags(tags) {\n    if (tags && !Helpers.hasDuplicates(tags)) {\n      this.setState({\n        tags\n      }, () => {// this.props.onTagChange(tags);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateControlledTags(nextProps.tags);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tagInputWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(TagsList, {\n        tags: this.state.tags,\n        onTagDelete: this.handleTagDelete,\n        hashtag: this.props.hashtag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tagInput\",\n        className: \"tagInput\",\n        placeholder: \"enter a tag...\",\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst TagsList = _ref2 => {\n  let {\n    tags,\n    onTagDelete,\n    hashtag\n  } = _ref2;\n  let list = tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n    name: tag,\n    onDelete: onTagDelete,\n    index: index,\n    hashtag: hashtag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    name: \"tagsList\",\n    className: \"tagsList\",\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TagsList;\n\nconst Tag = _ref3 => {\n  let {\n    name,\n    index,\n    onDelete,\n    hashtag,\n    hashtagStyle\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [hashtag && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"#898989\",\n        fontWeight: \"bold\",\n        ...hashtagStyled\n      },\n      children: [\"#\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), name, /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      onClick: e => onDelete(index, e),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Tag;\n\nconst ExampleList = _ref4 => {\n  let {\n    items,\n    filter,\n    onTagClick\n  } = _ref4;\n  let filtered = items.filter(item => Helpers.contains(item.tags, filter));\n  let renderedItems = filtered.map((_ref5, index) => {\n    let {\n      title,\n      description,\n      tags\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(ExampleListItem, {\n      title: title,\n      description: description,\n      tags: tags,\n      onClick: onTagClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\",\n        padding: \"0px\",\n        gridGap: \"10px\"\n      },\n      children: renderedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ExampleList;\n\nconst ExampleListItem = _ref6 => {\n  let {\n    title,\n    description,\n    tags,\n    key,\n    onClick\n  } = _ref6;\n  const renderedTags = tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: e => onClick(tag, e),\n    className: \"tag clickable\",\n    children: tag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this));\n  return (\n    /*#__PURE__*/\n    // <li\n    //   style={{\n    //     padding: 10,\n    //     listStyle: \"none\",\n    //     background: \"#efefef\",\n    //     borderRadius: \"10px\",\n    //     boxShadow: \"1px 1px 5px #aaa\",\n    //   }}\n    // >\n    //   {/* <h2>{title}</h2> */}\n    //   {/* <p>{description}</p> */}\n    //   <ul className=\"tagsList\" style={{ padding: 0 }}>\n    //     {renderedTags}\n    //   </ul>\n    // </li>\n    _jsxDEV(\"p\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c4 = ExampleListItem;\nexport default TemporaryInfluencerProfiles;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TagsList\");\n$RefreshReg$(_c2, \"Tag\");\n$RefreshReg$(_c3, \"ExampleList\");\n$RefreshReg$(_c4, \"ExampleListItem\");","map":{"version":3,"sources":["/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/TemporaryInfluencerProfiles.js"],"names":["React","Component","db","doc","setDoc","updateDoc","getDoc","collection","getDocs","Helpers","contains","orig","filter","res","map","item","includes","hasDuplicates","array","Set","size","length","TemporaryInfluencerProfiles","constructor","props","state","tags","profiles","handleTagChange","bind","handleListTagClick","componentDidMount","console","log","querySnapshot","forEach","temp","push","data","setState","tag","render","projects","TagInput","inputValue","handleNewTag","handleInputChange","handleKeyDown","handleTagDelete","deleteTag","notDuplicate","updateControlledTags","onNewTag","onTagChange","target","value","e","key","preventDefault","trim","addTag","index","callback","slice","splice","newTag","allowDuplicates","componentWillReceiveProps","nextProps","hashtag","TagsList","onTagDelete","list","Tag","name","onDelete","hashtagStyle","color","fontWeight","hashtagStyled","ExampleList","items","onTagClick","filtered","renderedItems","title","description","display","gridTemplateColumns","padding","gridGap","ExampleListItem","onClick","renderedTags"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter.map((item) => {\n      return orig.includes(item);\n    });\n    return !res.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n}\n\n// components\nclass TemporaryInfluencerProfiles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [\"game\"],\n      profiles: [],\n    };\n\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleListTagClick = this.handleListTagClick.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      temp.push(doc.data());\n    });\n    this.setState({ profiles: temp });\n  }\n\n  handleTagChange(tags) {\n    this.setState({ tags });\n  }\n\n  handleListTagClick(tag) {\n    this.setState({ tags: [...this.state.tags, tag] });\n  }\n\n  render() {\n    return (\n      <div>\n        <TagInput onTagChange={this.handleTagChange} tags={this.state.tags} />\n        <ExampleList\n          items={projects}\n          filter={this.state.tags}\n          onTagClick={this.handleListTagClick}\n        />\n      </div>\n    );\n  }\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      tags: this.props.tags || [],\n    };\n\n    this.handleNewTag = this.handleNewTag.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleTagDelete = this.handleTagDelete.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.notDuplicate = this.notDuplicate.bind(this);\n    this.updateControlledTags = this.updateControlledTags.bind(this);\n  }\n\n  handleNewTag(tags) {\n    if (this.props.onNewTag) this.props.onNewTag(tags);\n    if (this.props.onTagChange) this.props.onTagChange(tags);\n  }\n\n  handleInputChange({ target: { value: inputValue } }) {\n    inputValue = inputValue == \",\" ? \"\" : inputValue;\n    this.setState({ inputValue });\n  }\n\n  handleKeyDown(e) {\n    let {\n      key,\n      target: { value },\n    } = e;\n    let { tags } = this.state;\n    switch (key) {\n      case \"Tab\":\n        if (value) e.preventDefault();\n      case \"Enter\":\n      case \",\":\n        value = value.trim();\n        if (value && this.notDuplicate(tags, value)) {\n          this.addTag(value);\n        } else {\n          this.setState({ inputValue: \"\" });\n        }\n        break;\n      case \"Backspace\":\n        if (!value) {\n          this.handleTagDelete(tags.length - 1);\n        }\n        break;\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n\n    tags.splice(index, 1);\n    this.setState({ tags }, () => {\n      if (callback) callback();\n    });\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({ tags: [...this.state.tags, tag], inputValue: \"\" }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  updateControlledTags(tags) {\n    if (tags && !Helpers.hasDuplicates(tags)) {\n      this.setState({ tags }, () => {\n        // this.props.onTagChange(tags);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateControlledTags(nextProps.tags);\n  }\n\n  render() {\n    return (\n      <span className=\"tagInputWrapper\">\n        <TagsList\n          tags={this.state.tags}\n          onTagDelete={this.handleTagDelete}\n          hashtag={this.props.hashtag}\n        />\n        <input\n          name=\"tagInput\"\n          className=\"tagInput\"\n          placeholder=\"enter a tag...\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n        />\n      </span>\n    );\n  }\n}\n\nconst TagsList = ({ tags, onTagDelete, hashtag }) => {\n  let list = tags.map((tag, index) => (\n    <Tag name={tag} onDelete={onTagDelete} index={index} hashtag={hashtag} />\n  ));\n  return (\n    <ul name=\"tagsList\" className=\"tagsList\">\n      {list}\n    </ul>\n  );\n};\n\nconst Tag = ({ name, index, onDelete, hashtag, hashtagStyle }) => {\n  return (\n    <li>\n      {hashtag && (\n        <span\n          style={{ color: \"#898989\", fontWeight: \"bold\", ...hashtagStyled }}\n        >\n          #{\" \"}\n        </span>\n      )}\n      {name}\n      <a href=\"#\" onClick={(e) => onDelete(index, e)}>\n        x\n      </a>\n    </li>\n  );\n};\n\nconst ExampleList = ({ items, filter, onTagClick }) => {\n  let filtered = items.filter((item) => Helpers.contains(item.tags, filter));\n\n  let renderedItems = filtered.map(({ title, description, tags }, index) => {\n    return (\n      <ExampleListItem\n        title={title}\n        description={description}\n        tags={tags}\n        key={index}\n        onClick={onTagClick}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <ul\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          padding: \"0px\",\n          gridGap: \"10px\",\n        }}\n      >\n        {renderedItems}\n      </ul>\n    </div>\n  );\n};\n\nconst ExampleListItem = ({ title, description, tags, key, onClick }) => {\n  const renderedTags = tags.map((tag, index) => (\n    <li onClick={(e) => onClick(tag, e)} className=\"tag clickable\">\n      {tag}\n    </li>\n  ));\n\n  return (\n    // <li\n    //   style={{\n    //     padding: 10,\n    //     listStyle: \"none\",\n    //     background: \"#efefef\",\n    //     borderRadius: \"10px\",\n    //     boxShadow: \"1px 1px 5px #aaa\",\n    //   }}\n    // >\n    //   {/* <h2>{title}</h2> */}\n    //   {/* <p>{description}</p> */}\n    //   <ul className=\"tagsList\" style={{ padding: 0 }}>\n    //     {renderedTags}\n    //   </ul>\n    // </li>\n    <p>hi</p>\n  );\n};\n\nexport default TemporaryInfluencerProfiles;\n"]},"metadata":{},"sourceType":"module"}