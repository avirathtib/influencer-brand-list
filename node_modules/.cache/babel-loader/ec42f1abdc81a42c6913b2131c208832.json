{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedInHomePage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport { doc, collection, setDoc, updateDoc, getDocs } from \"firebase/firestore\";\nimport { ProfileContext, SelectedTagsContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport InfluencerProfiles from \"./InfluencerProfiles\";\nimport BrandProfiles from \"./BrandProfiles\"; //import CreateBrandsProfile from \"./pages/CreateBrandsProfile\";\n\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignedInHomePage() {\n  _s();\n\n  const {\n    profileType,\n    setProfileType\n  } = useContext(ProfileContext);\n  const {\n    selectedTagList,\n    setSelectedTagList\n  } = useContext(SelectedTagsContext);\n  const [tagList, setTagList] = useState([]);\n  const [showAllProfiles, setShowAllProfiles] = useState(true);\n  useEffect(async () => {\n    try {\n      let temp = [];\n      const querySnapshot = await getDocs(collection(db, \"influencerTags\"));\n      querySnapshot.forEach(doc => {\n        console.log(doc.id, \" => \", doc.data());\n        temp.push(doc.data().name);\n      });\n      setTagList(temp);\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n  const navigate = useNavigate();\n\n  const createinf = () => {\n    navigate(\"/createInfluencerPortfolio\");\n  };\n\n  const createbrand = () => {\n    navigate(\"/createBrandsPortfolio\");\n  };\n\n  const handleClick = tagName => {\n    selectedTagList.push(tagName);\n    setSelectedTagList(selectedTagList);\n    console.log(selectedTagList);\n  };\n\n  const handleDelete = tagName => {\n    const index = selectedTagList.indexOf(tagName);\n\n    if (index > -1) {\n      selectedTagList.splice(index, 1); // 2nd parameter means remove one item only\n\n      setSelectedTagList(selectedTagList);\n    }\n  };\n\n  const tagItems = tagList.map(tagName => /*#__PURE__*/_jsxDEV(Chip, {\n    label: tagName,\n    onClick: () => handleClick(tagName),\n    onDelete: () => handleDelete(tagName)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: profileType == \"Brand\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createinf,\n        children: \"Create Influencer Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createbrand,\n        children: \"Create Brand Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"tags display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: tagItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), showAllProfiles ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: profileType == \"Brand\" ? /*#__PURE__*/_jsxDEV(BrandProfiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(InfluencerProfiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignedInHomePage, \"f2H2/vhOoAXd2GJTjimBZVTX0pE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignedInHomePage;\nexport default SignedInHomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignedInHomePage\");","map":{"version":3,"sources":["/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/SignedInHomePage.js"],"names":["React","useContext","useEffect","useState","BrowserRouter","Router","Routes","Route","Link","db","doc","collection","setDoc","updateDoc","getDocs","ProfileContext","SelectedTagsContext","useNavigate","InfluencerProfiles","BrandProfiles","Chip","Stack","SignedInHomePage","profileType","setProfileType","selectedTagList","setSelectedTagList","tagList","setTagList","showAllProfiles","setShowAllProfiles","temp","querySnapshot","forEach","console","log","id","data","push","name","e","error","navigate","createinf","createbrand","handleClick","tagName","handleDelete","index","indexOf","splice","tagItems","map"],"mappings":"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","sourcesContent":["import { React, useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport {\n  doc,\n  collection,\n  setDoc,\n  updateDoc,\n  getDocs,\n} from \"firebase/firestore\";\nimport { ProfileContext, SelectedTagsContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport InfluencerProfiles from \"./InfluencerProfiles\";\nimport BrandProfiles from \"./BrandProfiles\";\n//import CreateBrandsProfile from \"./pages/CreateBrandsProfile\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction SignedInHomePage() {\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const { selectedTagList, setSelectedTagList } =\n    useContext(SelectedTagsContext);\n  const [tagList, setTagList] = useState([]);\n  const [showAllProfiles, setShowAllProfiles] = useState(true);\n\n  useEffect(async () => {\n    try {\n      let temp = [];\n      const querySnapshot = await getDocs(collection(db, \"influencerTags\"));\n      querySnapshot.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n        temp.push(doc.data().name);\n      });\n      setTagList(temp);\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n\n  const navigate = useNavigate();\n\n  const createinf = () => {\n    navigate(\"/createInfluencerPortfolio\");\n  };\n  const createbrand = () => {\n    navigate(\"/createBrandsPortfolio\");\n  };\n  const handleClick = (tagName) => {\n    selectedTagList.push(tagName);\n    setSelectedTagList(selectedTagList);\n    console.log(selectedTagList);\n  };\n\n  const handleDelete = (tagName) => {\n    const index = selectedTagList.indexOf(tagName);\n    if (index > -1) {\n      selectedTagList.splice(index, 1); // 2nd parameter means remove one item only\n      setSelectedTagList(selectedTagList);\n    }\n  };\n\n  const tagItems = tagList.map((tagName) => (\n    <Chip\n      label={tagName}\n      onClick={() => handleClick(tagName)}\n      onDelete={() => handleDelete(tagName)}\n    />\n  ));\n\n  return (\n    <div>\n      <div>\n        {profileType == \"Brand\" ? (\n          <button onClick={createinf}>Create Influencer Profile</button>\n        ) : (\n          <button onClick={createbrand}>Create Brand Profile</button>\n        )}\n      </div>\n\n      <div>\n        <p>tags display</p>\n        <Stack direction=\"row\" spacing={1}>\n          {tagItems}\n        </Stack>\n      </div>\n\n      {showAllProfiles ? (\n        <div>\n          {profileType == \"Brand\" ? <BrandProfiles /> : <InfluencerProfiles />}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default SignedInHomePage;\n"]},"metadata":{},"sourceType":"module"}