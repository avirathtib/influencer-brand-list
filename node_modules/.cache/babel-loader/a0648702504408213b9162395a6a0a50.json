{"ast":null,"code":"var _jsxFileName = \"/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerProfiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef, useContext } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport Card from \"react-bootstrap/Card\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport \"../styles/cardStyle.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ProfileContext, SelectedTagsContext, ClickedProfileContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numbers = new Array(20).fill(1).map((_, index) => index + 1);\n\nconst clickHandler = () => {\n  alert(\"clicked!\");\n};\n\nfunction InfluencerProfiles() {\n  _s();\n\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState([]);\n  const {\n    selectedTagList,\n    setSelectedTagList\n  } = useContext(SelectedTagsContext);\n  const {\n    clickedProfile,\n    setClickedProfile\n  } = useContext(ClickedProfileContext);\n  useEffect(() => {\n    if (selectedTagList.length == 0) {\n      loop();\n    }\n\n    console.log(\"ue hello\");\n  }, [selectedTagList]);\n  const scrollRef = /*#__PURE__*/createRef();\n  let temp = [];\n\n  async function loop() {\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      temp.push(doc.data());\n    });\n    setProfiles(temp);\n  }\n\n  async function tagEntry() {\n    console.log(\"hello from lse\");\n    const profilesSet = new Set();\n    selectedTagList.map(tag => {\n      const querySnapshot = getDoc(doc(db, \"influencerTags\", tag));\n      console.log(querySnapshot.data());\n      console.log(\"boss\");\n    });\n  } //console.log(\"hello from lse\");\n  // const profilesSet = new Set();\n  // selectedTagList.map((tag) => {\n  //   const querySnapshot = getDoc(doc(db, \"influencerTags\", tag));\n  //   console.log(querySnapshot.data());\n  //   console.log(\"boss\");\n\n\n  const enableKeyboardCursorToScroll = () => {\n    if (scrollRef.current) {\n      scrollRef.current.focus();\n    }\n  };\n\n  function handleClick(profile) {\n    setClickedProfile(profile);\n    console.log(\"Hello\");\n    navigate(`/profiles/${profile.email}`);\n  } // const tagItems = await getDocs(collection(db, \"influencerTags\"));\n  // tagItems.forEach((doc) => {\n  //   <div>\n  //     <div>\n  //       <img\n  //         src=\"gold.jpg\"\n  //         width=\"300px\"\n  //         alt=\"indiana jones contemplates swiping the statue\"\n  //       />\n  //       <h1>{doc.data().name}</h1>\n  //       <ScrollContainer className=\"container\">\n  //         <section\n  //           className=\"tiles\"\n  //           onFocus={enableKeyboardCursorToScroll}\n  //           ref={scrollRef}\n  //         >\n  //           {doc.data().influencers.map((email) => (\n  //             <Col>\n  //               <div>\n  //                 <Row>\n  //                   {/* <div onClick={() => handleClick(profile)}> */}\n  //                   <div>\n  //                     <Card style={{ width: \"18rem\", cursor: \"pointer\" }}>\n  //                       <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n  //                       <Card.Body>\n  //                         <Card.Title>fill title</Card.Title>\n  //                         <Card.Text>{email}</Card.Text>\n  //                         <button>View Profile</button>\n  //                       </Card.Body>\n  //                     </Card>\n  //                   </div>\n  //                 </Row>\n  //               </div>\n  //             </Col>\n  //           ))}\n  //         </section>\n  //       </ScrollContainer>\n  //     </div>\n  //   </div>;\n  //   // console.log(doc.id, \" => \", doc.data());\n  // });\n  // stocklist.map((stockname) => (\n  //   <li>\n  //     {stockname.title} : {stockname.ticker}\n  //   </li>\n  // ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"gold.jpg\",\n        width: \"300px\",\n        alt: \"indiana jones contemplates swiping the statue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Drag with Scrollbars using React Indiana Drag Scroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollContainer, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"tiles\",\n          onFocus: enableKeyboardCursorToScroll,\n          ref: scrollRef,\n          children: profiles.map(profile => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => handleClick(profile),\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      width: \"18rem\",\n                      cursor: \"pointer\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                      variant: \"top\",\n                      src: \"holder.js/100px180\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                        children: profile.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        children: profile.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        children: \"View Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" profiles by tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfluencerProfiles, \"4wUy8X0/R/trsSqc1UOcX2dvph4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = InfluencerProfiles;\nexport default InfluencerProfiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfluencerProfiles\");","map":{"version":3,"sources":["/Users/avirathtibrewala/Desktop/Builds/influencer-brand-list/src/pages/InfluencerProfiles.js"],"names":["React","useEffect","useState","createRef","useContext","db","doc","setDoc","updateDoc","getDoc","collection","getDocs","Card","Col","Row","Form","ScrollContainer","useNavigate","ProfileContext","SelectedTagsContext","ClickedProfileContext","numbers","Array","fill","map","_","index","clickHandler","alert","InfluencerProfiles","navigate","profiles","setProfiles","selectedTagList","setSelectedTagList","clickedProfile","setClickedProfile","length","loop","console","log","scrollRef","temp","querySnapshot","forEach","push","data","tagEntry","profilesSet","Set","tag","enableKeyboardCursorToScroll","current","focus","handleClick","profile","email","width","cursor","name","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef, useContext } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport Card from \"react-bootstrap/Card\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport \"../styles/cardStyle.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  ProfileContext,\n  SelectedTagsContext,\n  ClickedProfileContext,\n} from \"../App\";\n\nconst numbers = new Array(20).fill(1).map((_, index) => index + 1);\n\nconst clickHandler = () => {\n  alert(\"clicked!\");\n};\n\nfunction InfluencerProfiles() {\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState([]);\n  const { selectedTagList, setSelectedTagList } =\n    useContext(SelectedTagsContext);\n  const { clickedProfile, setClickedProfile } = useContext(\n    ClickedProfileContext\n  );\n  useEffect(() => {\n    if (selectedTagList.length == 0) {\n      loop();\n    }\n    console.log(\"ue hello\");\n  }, [selectedTagList]);\n\n  const scrollRef = createRef();\n  let temp = [];\n  async function loop() {\n    console.log(\"if hello\");\n    const querySnapshot = await getDocs(collection(db, \"Influencer\"));\n    console.log(querySnapshot);\n    querySnapshot.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      temp.push(doc.data());\n    });\n    setProfiles(temp);\n  }\n\n  async function tagEntry() {\n    console.log(\"hello from lse\");\n    const profilesSet = new Set();\n    selectedTagList.map((tag) => {\n      const querySnapshot = getDoc(doc(db, \"influencerTags\", tag));\n      console.log(querySnapshot.data());\n      console.log(\"boss\");\n    });\n  }\n\n  //console.log(\"hello from lse\");\n  // const profilesSet = new Set();\n  // selectedTagList.map((tag) => {\n  //   const querySnapshot = getDoc(doc(db, \"influencerTags\", tag));\n  //   console.log(querySnapshot.data());\n  //   console.log(\"boss\");\n\n  const enableKeyboardCursorToScroll = () => {\n    if (scrollRef.current) {\n      scrollRef.current.focus();\n    }\n  };\n\n  function handleClick(profile) {\n    setClickedProfile(profile);\n    console.log(\"Hello\");\n    navigate(`/profiles/${profile.email}`);\n  }\n\n  // const tagItems = await getDocs(collection(db, \"influencerTags\"));\n  // tagItems.forEach((doc) => {\n  //   <div>\n  //     <div>\n  //       <img\n  //         src=\"gold.jpg\"\n  //         width=\"300px\"\n  //         alt=\"indiana jones contemplates swiping the statue\"\n  //       />\n  //       <h1>{doc.data().name}</h1>\n  //       <ScrollContainer className=\"container\">\n  //         <section\n  //           className=\"tiles\"\n  //           onFocus={enableKeyboardCursorToScroll}\n  //           ref={scrollRef}\n  //         >\n  //           {doc.data().influencers.map((email) => (\n  //             <Col>\n  //               <div>\n  //                 <Row>\n  //                   {/* <div onClick={() => handleClick(profile)}> */}\n  //                   <div>\n  //                     <Card style={{ width: \"18rem\", cursor: \"pointer\" }}>\n  //                       <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n  //                       <Card.Body>\n  //                         <Card.Title>fill title</Card.Title>\n  //                         <Card.Text>{email}</Card.Text>\n  //                         <button>View Profile</button>\n  //                       </Card.Body>\n  //                     </Card>\n  //                   </div>\n  //                 </Row>\n  //               </div>\n  //             </Col>\n  //           ))}\n  //         </section>\n  //       </ScrollContainer>\n  //     </div>\n  //   </div>;\n  //   // console.log(doc.id, \" => \", doc.data());\n  // });\n\n  // stocklist.map((stockname) => (\n  //   <li>\n  //     {stockname.title} : {stockname.ticker}\n  //   </li>\n  // ));\n\n  return (\n    <div>\n      <div>\n        <img\n          src=\"gold.jpg\"\n          width=\"300px\"\n          alt=\"indiana jones contemplates swiping the statue\"\n        />\n        <h1>Drag with Scrollbars using React Indiana Drag Scroll</h1>\n        <ScrollContainer className=\"container\">\n          <section\n            className=\"tiles\"\n            onFocus={enableKeyboardCursorToScroll}\n            ref={scrollRef}\n          >\n            {profiles.map((profile) => (\n              <Col>\n                <div>\n                  <Row>\n                    <div onClick={() => handleClick(profile)}>\n                      <Card style={{ width: \"18rem\", cursor: \"pointer\" }}>\n                        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                        <Card.Body>\n                          <Card.Title>{profile.name}</Card.Title>\n                          <Card.Text>{profile.description}</Card.Text>\n                          <button>View Profile</button>\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </Row>\n                </div>\n              </Col>\n            ))}\n          </section>\n        </ScrollContainer>\n      </div>\n      <div>\n        <p> profiles by tag</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InfluencerProfiles;\n"]},"metadata":{},"sourceType":"module"}