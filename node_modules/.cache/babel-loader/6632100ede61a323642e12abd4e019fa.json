{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateInfluencerProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { db } from \"../firebase-config\";\nimport app from \"../firebase-config\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateInfluencerProfile() {\n  _s();\n\n  const {\n    email,\n    setEmail\n  } = useContext(UserContext);\n  const {\n    profileType,\n    setProfileType\n  } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [instagram, setInstagram] = useState(\"defaultinsta\");\n  const [twitter, setTwitter] = useState(\"defaultTwitter\");\n  const [facebook, setFacebook] = useState(\"defaultFacebook\");\n  const [portfolio, setPortfolio] = useState(\"defaultportfolio\");\n  const [salary, setSalary] = useState(\"defaultsalary\");\n  const [tags, setTags] = useState([]);\n  const storage = getStorage();\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n\n  const onFileChange = async e => {\n    const file = e.target.files[0]; // const storageRef = app.storage().ref();\n    // const fileRef = storageRef.child(file.name);\n    // await fileRef.put(file);\n    // setFileUrl(await fileRef.getDownloadURL());\n\n    const storage = getStorage();\n    const storageRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(\"Upload is \" + progress + \"% done\");\n\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n      }\n    }, error => {// Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        console.log(\"File available at\", downloadURL);\n        setFileUrl(downloadURL);\n      });\n    });\n  };\n\n  const submitHandler = async e => {\n    console.log(\"hi\");\n    e.preventDefault();\n    console.log(profileType);\n    console.log(email);\n    const addDetails = doc(db, profileType, email);\n    console.log(addDetails);\n    setDoc(addDetails, {\n      description: description,\n      location: location,\n      instagram: instagram,\n      facebook: facebook,\n      portfolio: portfolio,\n      salary: salary,\n      extendedProfileCreated: true,\n      tags: tags,\n      avatar: fileUrl\n    }, {\n      merge: true\n    });\n    tags.map(tag => addToTags(tag));\n  };\n\n  const addToTags = async tag => {\n    // const addTags = doc(db, tags, tag);\n    const docRef = doc(db, \"influencerTags\", tag);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 8,\n        influencers: [\"USA\"]\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 8,\n        influencers: [\"USA\"]\n      });\n    }\n  };\n\n  const nameHandler = e => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = e => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const descriptionHandler = e => {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n    console.log(description);\n  };\n\n  const locationHandler = e => {\n    console.log(e.target.value);\n    setLocation(e.target.value);\n    console.log(location);\n  };\n\n  const instagramHandler = e => {\n    console.log(e.target.value);\n    setInstagram(e.target.value);\n    console.log(instagram);\n  };\n\n  const twitterHandler = e => {\n    console.log(e.target.value);\n    setTwitter(e.target.value);\n    console.log(twitter);\n  };\n\n  const facebookHandler = e => {\n    console.log(e.target.value);\n    setFacebook(e.target.value);\n    console.log(facebook);\n  };\n\n  const portfolioHandler = e => {\n    console.log(e.target.value);\n    setPortfolio(e.target.value);\n    console.log(portfolio);\n  };\n\n  const salaryHandler = e => {\n    console.log(e.target.value);\n    setSalary(e.target.value);\n    console.log(salary);\n  }; // const submitHandler = (e) => {\n  //   console.log(profileType)\n  //   e.preventDefault();\n  //   try {\n  //     console.log(profileType)\n  //     console.log(email)\n  //     const addDetails = doc(db, profileType, email);\n  //     console.log(addDetails);\n  //     setDoc(\n  //       addDetails,\n  //       {\n  //         description: description,\n  //         location: location,\n  //         instagram: instagram,\n  //         facebook: facebook,\n  //         portfolio: portfolio,\n  //         salary: salary,\n  //         extendedProfileCreated: true,\n  //         tags: tags,\n  //       },\n  //       { merge: true }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: \"required\",\n        name: \"full_name\",\n        onChange: nameHandler,\n        placeholder: \"Full Name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        required: \"required\",\n        onChange: emailHandler,\n        placeholder: \"Email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        required: \"required\",\n        onChange: descriptionHandler,\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        required: \"required\",\n        onChange: locationHandler,\n        placeholder: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"instagram\",\n        required: \"required\",\n        onChange: instagramHandler,\n        placeholder: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"twitter\",\n        required: \"required\",\n        onChange: twitterHandler,\n        placeholder: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Facebook\",\n        required: \"required\",\n        onChange: facebookHandler,\n        placeholder: \"Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"portfolio\",\n        required: \"required\",\n        onChange: portfolioHandler,\n        placeholder: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"salary\",\n        required: \"required\",\n        onChange: salaryHandler,\n        placeholder: \"Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTagInput, {\n        tags: tags,\n        onChange: newTags => setTags(newTags)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onSubmit: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateInfluencerProfile, \"bIrPOnyZ3UvEczFys8wAGPFaBhM=\");\n\n_c = CreateInfluencerProfile;\nexport default CreateInfluencerProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateInfluencerProfile\");","map":{"version":3,"sources":["/Users/surabhishetty/Desktop/influencer-brand-list/src/pages/CreateInfluencerProfile.js"],"names":["React","useState","useContext","useEffect","useCallback","db","app","doc","setDoc","updateDoc","FieldValue","UserContext","ProfileContext","getStorage","ref","uploadBytesResumable","getDownloadURL","ReactTagInput","CreateInfluencerProfile","email","setEmail","profileType","setProfileType","name","setName","description","setDescription","location","setLocation","instagram","setInstagram","twitter","setTwitter","facebook","setFacebook","portfolio","setPortfolio","salary","setSalary","tags","setTags","storage","fileUrl","setFileUrl","users","setUsers","onFileChange","e","file","target","files","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","then","downloadURL","submitHandler","preventDefault","addDetails","extendedProfileCreated","avatar","merge","map","tag","addToTags","docRef","docSnap","getDoc","exists","size","influencers","nameHandler","value","emailHandler","descriptionHandler","locationHandler","instagramHandler","twitterHandler","facebookHandler","portfolioHandler","salaryHandler","newTags"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { db } from \"../firebase-config\";\nimport app from \"../firebase-config\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { FieldValue } from \"@firebase/firestore\";\nimport { UserContext, ProfileContext } from \"../App\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\n\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nfunction CreateInfluencerProfile() {\n  const { email, setEmail } = useContext(UserContext);\n  const { profileType, setProfileType } = useContext(ProfileContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"defaultdesc\");\n  const [location, setLocation] = useState(\"defaultloc\");\n  const [instagram, setInstagram] = useState(\"defaultinsta\");\n  const [twitter, setTwitter] = useState(\"defaultTwitter\");\n  const [facebook, setFacebook] = useState(\"defaultFacebook\");\n  const [portfolio, setPortfolio] = useState(\"defaultportfolio\");\n  const [salary, setSalary] = useState(\"defaultsalary\");\n  const [tags, setTags] = useState([]);\n  const storage = getStorage();\n\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n\n  const onFileChange = async (e) => {\n    const file = e.target.files[0];\n    // const storageRef = app.storage().ref();\n    // const fileRef = storageRef.child(file.name);\n    // await fileRef.put(file);\n    // setFileUrl(await fileRef.getDownloadURL());\n    const storage = getStorage();\n    const storageRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n        }\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n      },\n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log(\"File available at\", downloadURL);\n          setFileUrl(downloadURL);\n        });\n      }\n    );\n  };\n\n  const submitHandler = async (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n\n    console.log(profileType);\n    console.log(email);\n    const addDetails = doc(db, profileType, email);\n    console.log(addDetails);\n    setDoc(\n      addDetails,\n      {\n        description: description,\n        location: location,\n        instagram: instagram,\n        facebook: facebook,\n        portfolio: portfolio,\n        salary: salary,\n        extendedProfileCreated: true,\n        tags: tags,\n        avatar: fileUrl,\n      },\n      { merge: true }\n    );\n\n    tags.map((tag) => addToTags(tag));\n  };\n\n  const addToTags = async (tag) => {\n    // const addTags = doc(db, tags, tag);\n\n    const docRef = doc(db, \"influencerTags\", tag);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 8,\n        influencers: [\"USA\"],\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      await setDoc(doc(db, \"influencerTags\", tag), {\n        name: tag,\n        size: 8,\n        influencers: [\"USA\"],\n      });\n    }\n  };\n\n  const nameHandler = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  const emailHandler = (e) => {\n    console.log(e.target.value);\n    setEmail(e.target.value);\n    console.log(email);\n  };\n\n  const descriptionHandler = (e) => {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n    console.log(description);\n  };\n\n  const locationHandler = (e) => {\n    console.log(e.target.value);\n    setLocation(e.target.value);\n    console.log(location);\n  };\n\n  const instagramHandler = (e) => {\n    console.log(e.target.value);\n    setInstagram(e.target.value);\n    console.log(instagram);\n  };\n\n  const twitterHandler = (e) => {\n    console.log(e.target.value);\n    setTwitter(e.target.value);\n    console.log(twitter);\n  };\n\n  const facebookHandler = (e) => {\n    console.log(e.target.value);\n    setFacebook(e.target.value);\n    console.log(facebook);\n  };\n\n  const portfolioHandler = (e) => {\n    console.log(e.target.value);\n    setPortfolio(e.target.value);\n    console.log(portfolio);\n  };\n\n  const salaryHandler = (e) => {\n    console.log(e.target.value);\n    setSalary(e.target.value);\n    console.log(salary);\n  };\n\n  // const submitHandler = (e) => {\n  //   console.log(profileType)\n  //   e.preventDefault();\n  //   try {\n  //     console.log(profileType)\n  //     console.log(email)\n  //     const addDetails = doc(db, profileType, email);\n  //     console.log(addDetails);\n  //     setDoc(\n  //       addDetails,\n  //       {\n  //         description: description,\n  //         location: location,\n  //         instagram: instagram,\n  //         facebook: facebook,\n  //         portfolio: portfolio,\n  //         salary: salary,\n  //         extendedProfileCreated: true,\n  //         tags: tags,\n  //       },\n  //       { merge: true }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          required=\"required\"\n          name=\"full_name\"\n          onChange={nameHandler}\n          placeholder=\"Full Name\"\n          value={name}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          required=\"required\"\n          onChange={emailHandler}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"description\"\n          required=\"required\"\n          onChange={descriptionHandler}\n          placeholder=\"Description\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          required=\"required\"\n          onChange={locationHandler}\n          placeholder=\"Location\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"instagram\"\n          required=\"required\"\n          onChange={instagramHandler}\n          placeholder=\"Instagram\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"twitter\"\n          required=\"required\"\n          onChange={twitterHandler}\n          placeholder=\"Twitter\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"Facebook\"\n          required=\"required\"\n          onChange={facebookHandler}\n          placeholder=\"Facebook\"\n        />\n        <br />{\" \"}\n        <input\n          type=\"text\"\n          name=\"portfolio\"\n          required=\"required\"\n          onChange={portfolioHandler}\n          placeholder=\"Portfolio\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"salary\"\n          required=\"required\"\n          onChange={salaryHandler}\n          placeholder=\"Salary\"\n        />\n        <br />\n        <p>Tags</p>\n        <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n        <input type=\"file\" onChange={onFileChange} />\n        <button onSubmit={submitHandler}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateInfluencerProfile;\n"]},"metadata":{},"sourceType":"module"}